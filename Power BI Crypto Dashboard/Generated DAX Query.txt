// Generated DAX Query
DEFINE 
---- MODEL MEASURES BEGIN ----
MEASURE [14D Price Change %] = 
VAR SelectedCoin = SELECTEDVALUE('Yearly Market Chart Data'[Coin_id])
VAR HasCoin = NOT(ISBLANK(SelectedCoin))

VAR LatestTimestamp =
    CALCULATE(
        MAX('Yearly Market Chart Data'[Timestamp]),
        FILTER('Yearly Market Chart Data', 'Yearly Market Chart Data'[Coin_id] = SelectedCoin)
    )

VAR TargetTimestamp = LatestTimestamp - 14

VAR ClosestTimestamp =
    CALCULATE(
        MAX('Yearly Market Chart Data'[Timestamp]),
        FILTER(
            'Yearly Market Chart Data',
            'Yearly Market Chart Data'[Coin_id] = SelectedCoin &&
            'Yearly Market Chart Data'[Timestamp] <= TargetTimestamp
        )
    )

VAR StartPrice =
    CALCULATE(
        MAX('Yearly Market Chart Data'[Price]),
        FILTER(
            'Yearly Market Chart Data',
            'Yearly Market Chart Data'[Coin_id] = SelectedCoin &&
            'Yearly Market Chart Data'[Timestamp] = ClosestTimestamp
        )
    )

VAR LatestPrice =
    CALCULATE(
        MAX('Yearly Market Chart Data'[Price]),
        FILTER(
            'Yearly Market Chart Data',
            'Yearly Market Chart Data'[Coin_id] = SelectedCoin &&
            'Yearly Market Chart Data'[Timestamp] = LatestTimestamp
        )
    )

RETURN
IF(
    HasCoin &&
    NOT(ISBLANK(StartPrice)) && StartPrice > 0,
    (LatestPrice - StartPrice) / StartPrice,
    BLANK()
)

MEASURE [1H Price Change %] = 
VAR SelectedCoin = SELECTEDVALUE('Hourly Market Chart Data'[Coin_id])
VAR HasCoin = NOT(ISBLANK(SelectedCoin))

VAR LatestTimestamp =
    CALCULATE(
        MAX('Hourly Market Chart Data'[Timestamp]),
        FILTER('Hourly Market Chart Data', 'Hourly Market Chart Data'[Coin_id] = SelectedCoin)
    )

VAR OneHourAgo = 
    LatestTimestamp - TIME(1, 0, 0)   -- subtract 1 hour

VAR ClosestTimestamp =
    CALCULATE(
        MAX('Hourly Market Chart Data'[Timestamp]),
        FILTER(
            'Hourly Market Chart Data',
            'Hourly Market Chart Data'[Coin_id] = SelectedCoin &&
            'Hourly Market Chart Data'[Timestamp] <= OneHourAgo
        )
    )

VAR StartPrice =
    CALCULATE(
        MAX('Hourly Market Chart Data'[Price]),
        FILTER(
            'Hourly Market Chart Data',
            'Hourly Market Chart Data'[Coin_id] = SelectedCoin &&
            'Hourly Market Chart Data'[Timestamp] = ClosestTimestamp
        )
    )

VAR LatestPrice =
    CALCULATE(
        MAX('Hourly Market Chart Data'[Price]),
        FILTER(
            'Hourly Market Chart Data',
            'Hourly Market Chart Data'[Coin_id] = SelectedCoin &&
            'Hourly Market Chart Data'[Timestamp] = LatestTimestamp
        )
    )

RETURN
IF(
    HasCoin &&
    NOT(ISBLANK(StartPrice)) && StartPrice > 0,
    (LatestPrice - StartPrice) / StartPrice,
    BLANK()
)

MEASURE [1Y Price Change %] = 
VAR SelectedCoin = SELECTEDVALUE('Yearly Market Chart Data'[Coin_id])
VAR HasCoin = NOT(ISBLANK(SelectedCoin))

VAR LatestTimestamp =
    CALCULATE(
        MAX('Yearly Market Chart Data'[Timestamp]),
        FILTER('Yearly Market Chart Data', 'Yearly Market Chart Data'[Coin_id] = SelectedCoin)
    )

VAR EarliestTimestamp =
    CALCULATE(
        MIN('Yearly Market Chart Data'[Timestamp]),
        FILTER('Yearly Market Chart Data', 'Yearly Market Chart Data'[Coin_id] = SelectedCoin)
    )

VAR DataRangeInDays = DATEDIFF(EarliestTimestamp, LatestTimestamp, DAY)

VAR OneYearAgoTarget = LatestTimestamp - 365

VAR ClosestTimestamp =
    CALCULATE(
        MAX('Yearly Market Chart Data'[Timestamp]),
        FILTER(
            'Yearly Market Chart Data',
            'Yearly Market Chart Data'[Coin_id] = SelectedCoin &&
            'Yearly Market Chart Data'[Timestamp] <= OneYearAgoTarget
        )
    )

VAR StartPrice =
    CALCULATE(
        MAX('Yearly Market Chart Data'[Price]),
        FILTER('Yearly Market Chart Data',
            'Yearly Market Chart Data'[Coin_id] = SelectedCoin &&
            'Yearly Market Chart Data'[Timestamp] = ClosestTimestamp)
    )

VAR LatestPrice =
    CALCULATE(
        MAX('Yearly Market Chart Data'[Price]),
        FILTER('Yearly Market Chart Data',
            'Yearly Market Chart Data'[Coin_id] = SelectedCoin &&
            'Yearly Market Chart Data'[Timestamp] = LatestTimestamp)
    )

RETURN
IF(
    HasCoin &&
    DataRangeInDays >= 360 &&
    NOT(ISBLANK(StartPrice)) && StartPrice > 0,
    (LatestPrice - StartPrice) / StartPrice,
    0
)

MEASURE [24Hr Price Change %] = 
VAR SelectedCoin = SELECTEDVALUE('Hourly Market Chart Data'[Coin_id])

VAR StartPrice =
    CALCULATE (
        FIRSTNONBLANK('Hourly Market Chart Data'[Price], 1),
        FILTER (
            'Hourly Market Chart Data',
            'Hourly Market Chart Data'[Coin_id] = SelectedCoin &&
            'Hourly Market Chart Data'[Timestamp] = CALCULATE(MIN('Hourly Market Chart Data'[Timestamp]), ALLEXCEPT('Hourly Market Chart Data', 'Hourly Market Chart Data'[Coin_id]))
        )
    )

VAR EndPrice =
    CALCULATE (
        FIRSTNONBLANK('Hourly Market Chart Data'[Price], 1),
        FILTER (
            'Hourly Market Chart Data',
            'Hourly Market Chart Data'[Coin_id] = SelectedCoin &&
            'Hourly Market Chart Data'[Timestamp] = CALCULATE(MAX('Hourly Market Chart Data'[Timestamp]), ALLEXCEPT('Hourly Market Chart Data', 'Hourly Market Chart Data'[Coin_id]))
        )
    )

RETURN
DIVIDE(EndPrice - StartPrice, StartPrice)

MEASURE [30D Price Change %] = 
VAR SelectedCoin = SELECTEDVALUE('Yearly Market Chart Data'[Coin_id])
VAR HasCoin = NOT(ISBLANK(SelectedCoin))

VAR LatestTimestamp =
    CALCULATE(
        MAX('Yearly Market Chart Data'[Timestamp]),
        FILTER('Yearly Market Chart Data', 'Yearly Market Chart Data'[Coin_id] = SelectedCoin)
    )

VAR TargetTimestamp = LatestTimestamp - 30

VAR ClosestTimestamp =
    CALCULATE(
        MAX('Yearly Market Chart Data'[Timestamp]),
        FILTER(
            'Yearly Market Chart Data',
            'Yearly Market Chart Data'[Coin_id] = SelectedCoin &&
            'Yearly Market Chart Data'[Timestamp] <= TargetTimestamp
        )
    )

VAR StartPrice =
    CALCULATE(
        MAX('Yearly Market Chart Data'[Price]),
        FILTER(
            'Yearly Market Chart Data',
            'Yearly Market Chart Data'[Coin_id] = SelectedCoin &&
            'Yearly Market Chart Data'[Timestamp] = ClosestTimestamp
        )
    )

VAR LatestPrice =
    CALCULATE(
        MAX('Yearly Market Chart Data'[Price]),
        FILTER(
            'Yearly Market Chart Data',
            'Yearly Market Chart Data'[Coin_id] = SelectedCoin &&
            'Yearly Market Chart Data'[Timestamp] = LatestTimestamp
        )
    )

RETURN
IF(
    HasCoin &&
    NOT(ISBLANK(StartPrice)) && StartPrice > 0,
    (LatestPrice - StartPrice) / StartPrice,
    BLANK()
)

MEASURE [7D Price Change %] = 
VAR SelectedCoin = SELECTEDVALUE('Yearly Market Chart Data'[Coin_id])
VAR HasCoin = NOT(ISBLANK(SelectedCoin))

VAR LatestTimestamp =
    CALCULATE(
        MAX('Yearly Market Chart Data'[Timestamp]),
        FILTER('Yearly Market Chart Data', 'Yearly Market Chart Data'[Coin_id] = SelectedCoin)
    )

VAR TargetTimestamp = LatestTimestamp - 7

VAR ClosestTimestamp =
    CALCULATE(
        MAX('Yearly Market Chart Data'[Timestamp]),
        FILTER(
            'Yearly Market Chart Data',
            'Yearly Market Chart Data'[Coin_id] = SelectedCoin &&
            'Yearly Market Chart Data'[Timestamp] <= TargetTimestamp
        )
    )

VAR StartPrice =
    CALCULATE(
        MAX('Yearly Market Chart Data'[Price]),
        FILTER(
            'Yearly Market Chart Data',
            'Yearly Market Chart Data'[Coin_id] = SelectedCoin &&
            'Yearly Market Chart Data'[Timestamp] = ClosestTimestamp
        )
    )

VAR LatestPrice =
    CALCULATE(
        MAX('Yearly Market Chart Data'[Price]),
        FILTER(
            'Yearly Market Chart Data',
            'Yearly Market Chart Data'[Coin_id] = SelectedCoin &&
            'Yearly Market Chart Data'[Timestamp] = LatestTimestamp
        )
    )

RETURN
IF(
    HasCoin &&
    NOT(ISBLANK(StartPrice)) && StartPrice > 0,
    (LatestPrice - StartPrice) / StartPrice,
    BLANK()
)

MEASURE [SMA_200] = 
CALCULATE(
    AVERAGE('Yearly Market Chart Data'[Price]),
    DATESINPERIOD(
        'Yearly Market Chart Data'[Date],
        MAX('Yearly Market Chart Data'[Date]),
        -200,
        DAY
    )
)

MEASURE [Volatility] = 
VAR Volatility = 
    STDEVX.P(
        SUMMARIZE('Yearly Market Chart Data', 'Yearly Market Chart Data'[Date], "DailyPrice", MAX('Yearly Market Chart Data'[Price])),
        [DailyPrice]
    )
RETURN Volatility
MEASURE [Yearly Price Growth] = 
VAR StartDate = CALCULATE(MIN('Yearly Market Chart Data'[Date]))
VAR EndDate = CALCULATE(MAX('Yearly Market Chart Data'[Date]))
VAR StartPrice = 
    CALCULATE(
        FIRSTNONBLANK('Yearly Market Chart Data'[Price], 1),
        'Yearly Market Chart Data'[Date] = StartDate
    )
VAR EndPrice = 
    CALCULATE(
        LASTNONBLANK('Yearly Market Chart Data'[Price], 1),
        'Yearly Market Chart Data'[Date] = EndDate
    )

VAR NumYears = DATEDIFF(StartDate, EndDate, DAY) / 365.0

-- Real Price Growth % (Compound Annual Growth Rate)
VAR Growth = (POWER(EndPrice / StartPrice, 1 / NumYears) - 1) * 100

VAR GrowthMsg =
    IF(
        Growth >= 0,
        "Grew by " & FORMAT(ABS(Growth), "0.00") & "%",
        "Declined by " & FORMAT(ABS(Growth), "0.00") & "%"
    )

RETURN GrowthMsg
MEASURE [Yearly Price Growth Color] = 
VAR StartDate = CALCULATE(MIN('Yearly Market Chart Data'[Date]))
VAR EndDate = CALCULATE(MAX('Yearly Market Chart Data'[Date]))
VAR StartPrice = 
    CALCULATE(
        FIRSTNONBLANK('Yearly Market Chart Data'[Price], 1),
        'Yearly Market Chart Data'[Date] = StartDate
    )
VAR EndPrice = 
    CALCULATE(
        LASTNONBLANK('Yearly Market Chart Data'[Price], 1),
        'Yearly Market Chart Data'[Date] = EndDate
    )

VAR NumYears = DATEDIFF(StartDate, EndDate, DAY) / 365.0

-- Real Price Growth % (Compound Annual Growth Rate)
VAR Growth = (POWER(EndPrice / StartPrice, 1 / NumYears) - 1) * 100

VAR GrowthMsg =
    IF(
        Growth >= 0,
        "Price Grew by " & FORMAT(ABS(Growth), "0.00") & "%",
        "Price Declined by " & FORMAT(ABS(Growth), "0.00") & "%"
    )

VAR Color = IF(
    Growth < 0,
    "#FF0000", // Red
    "#008000"  // Green
)


RETURN Color

MEASURE [₹10K Investment Insight] = 
VAR StartDate = CALCULATE(MIN('Yearly Market Chart Data'[Date]))
VAR EndDate = CALCULATE(MAX('Yearly Market Chart Data'[Date]))
VAR StartPrice = 
    CALCULATE(
        FIRSTNONBLANK('Yearly Market Chart Data'[Price], 1),
        'Yearly Market Chart Data'[Date] = StartDate
    )
VAR EndPrice = 
    CALCULATE(
        LASTNONBLANK('Yearly Market Chart Data'[Price], 1),
        'Yearly Market Chart Data'[Date] = EndDate
    )
VAR Units = DIVIDE(10000, StartPrice)
VAR FinalAmount = Units * EndPrice
RETURN 
"💰 ₹10,000 invested on " & FORMAT(StartDate, "dd MMM yyyy") & " would be worth ₹" & FORMAT(FinalAmount, "0") & 
" today (" & FORMAT(EndDate, "dd MMM yyyy") & ")."

MEASURE [Investment Decision Insight] = 
VAR CurrentPrice = SELECTEDVALUE('User Portfolio Based Crypto Data'[Current Price])
VAR HighestPrice = SELECTEDVALUE('User Portfolio Based Crypto Data'[All-Time High Price])
VAR PriceChange = 
    VAR StartDate = CALCULATE(MIN('Yearly Market Chart Data'[Date]))
    VAR EndDate = CALCULATE(MAX('Yearly Market Chart Data'[Date]))
    VAR StartPrice = 
        CALCULATE(
            FIRSTNONBLANK('Yearly Market Chart Data'[Price], 1),
            'Yearly Market Chart Data'[Date] = StartDate
        )
    VAR EndPrice = 
        CALCULATE(
            LASTNONBLANK('Yearly Market Chart Data'[Price], 1),
            'Yearly Market Chart Data'[Date] = EndDate
        )
    RETURN DIVIDE(EndPrice - StartPrice, StartPrice, 0) * 100

VAR Volatility =
    STDEVX.P(
        SUMMARIZE('Yearly Market Chart Data', 'Yearly Market Chart Data'[Date], "DailyPrice", MAX('Yearly Market Chart Data'[Price])),
        [DailyPrice]
    )

VAR PercentBelowHigh = DIVIDE(HighestPrice - CurrentPrice, HighestPrice, 0) * 100

RETURN 
SWITCH(
    TRUE(),
    // 🚀 Strong Uptrend & Stable → Consider Buying
    PriceChange > 20 && Volatility < 0.015 && PercentBelowHigh > 15,
        "✅ Consider buying – stable growth and currently well below peak price.",
    
    // 📈 Moderate Growth or Small Dip → Hold
    PriceChange > 0 && PriceChange <= 20 && PercentBelowHigh < 15,
        "🟡 Hold – modest growth and price near high.",

    // 🔻 Heavy Drop but High Volatility → Wait or Avoid
    PriceChange < 0 && Volatility > 0.02,
        "⛔ Too volatile with recent losses – wait for better stability.",

    // 📉 Declining with stability → Consider Selling
    PriceChange < -10 && Volatility < 0.015,
        "📤 Consider selling – steady decline and low momentum.",

    // 😐 No clear trend → Wait and observe
    TRUE, "🔍 No strong trend – observe market before taking action."
)

MEASURE [Price Growth Insight] = 
VAR StartDate = CALCULATE(MIN('Yearly Market Chart Data'[Date]))
VAR EndDate = CALCULATE(MAX('Yearly Market Chart Data'[Date]))
VAR StartPrice = 
    CALCULATE(
        FIRSTNONBLANK('Yearly Market Chart Data'[Price], 1),
        'Yearly Market Chart Data'[Date] = StartDate
    )
VAR EndPrice = 
    CALCULATE(
        LASTNONBLANK('Yearly Market Chart Data'[Price], 1),
        'Yearly Market Chart Data'[Date] = EndDate
    )

VAR NumYears = DATEDIFF(StartDate, EndDate, DAY) / 365.0

-- Real Price Growth % (Compound Annual Growth Rate)
VAR Growth = (POWER(EndPrice / StartPrice, 1 / NumYears) - 1) * 100

VAR GrowthMsg =
    IF(
        Growth >= 0,
        "grew by " & FORMAT(ABS(Growth), "0.00") & "%.",
        "declined by " & FORMAT(ABS(Growth), "0.00") & "%."
    )

RETURN
"📈 From " & FORMAT(StartDate, "dd MMM yyyy") & " to " & FORMAT(EndDate, "dd MMM yyyy") & 
", the coin "&GrowthMsg&"."

MEASURE [SMA 200 Insight] = 
VAR CurrentPrice = SELECTEDVALUE('User Portfolio Based Crypto Data'[Current Price])
VAR SMA = [SMA_200]
RETURN
SWITCH(
    TRUE(),
    CurrentPrice > SMA, "🟢 The price is above the long-term average, showing a strong and possibly rising market.",
    CurrentPrice < SMA, "🔴 The price is below the long-term average, showing a weak or declining trend.",
    "⚪ The price is matching the long-term average, suggesting no clear long-term trend."
)

MEASURE [Volatility Insight] = 
VAR Volatility = 
    STDEVX.P(
        SUMMARIZE('Yearly Market Chart Data', 'Yearly Market Chart Data'[Date], "DailyPrice", MAX('Yearly Market Chart Data'[Price])),
        [DailyPrice]
    )
RETURN
SWITCH(
    TRUE(),
    Volatility < 0.005, "🔒 Price remained remarkably stable throughout the year with minimal fluctuations.",
    Volatility < 0.02, "⚠️ Moderate volatility was observed, with some fluctuations in the price over the year.",
    Volatility < 0.05, "⚡ High volatility – significant price swings occurred, indicating higher risk.",
    "💥 Extreme volatility – substantial price changes, indicating highly unpredictable market behavior."
)

MEASURE [Animated Background] = 
"<!DOCTYPE html>
<html>
    <head>
        <link href='https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css' rel='stylesheet' integrity='sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC' crossorigin='anonymous'>
        <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css'>
        <style>
            body{ background-color: white; overflow-y: hidden; overflow-x: hidden; }
            .square{ position: relative; width: 400px; height: 400px; display: flex; justify-content: center; align-items: center; }
            .square span:nth-child(1){ position: absolute; top: 0; left: 0; width: 100%; height: 100%; background-image: radial-gradient(#6b72ff00 50%, #000dff3b 40%); box-shadow: 0 0 20px rgba(0, 0, 0, 0.2), inset 0 0 20px rgba(0, 0, 0, 0.1); border-radius: 38% 62% 63% 37% / 41% 44% 56% 59%; transition: 0.5s; animation: animate1 6s linear infinite; }
            .square span:nth-child(2){ position: absolute; top: 0; left: 0; width: 100%; height: 100%; background-image: radial-gradient(#6b72ff00 50%, #000dff3b 40%); box-shadow: 0 0 20px rgba(0, 0, 0, 0.2), inset 0 0 20px rgba(0, 0, 0, 0.1); border-radius: 38% 62% 63% 37% / 41% 44% 56% 59%; transition: 0.5s; animation: animate2 4s linear infinite; }
            .square span:nth-child(3){ position: absolute; top: 0; left: 0; width: 100%; height: 100%; background-image: radial-gradient(#6b72ff00 50%, #000dff3b 40%); box-shadow: 0 0 20px rgba(0, 0, 0, 0.2), inset 0 0 20px rgba(0, 0, 0, 0.1); border-radius: 38% 62% 63% 37% / 41% 44% 56% 59%; transition: 0.5s; animation: animate3 8s linear infinite; }
            @keyframes animate1 { 0% { transform: rotate(0deg); } 100%{ transform: rotate(360deg); } }
            @keyframes animate2 { 0% { transform: rotate(0deg); } 100%{ transform: rotate(360deg); } }
            @keyframes animate3 { 0% { transform: rotate(0deg); } 100%{ transform: rotate(360deg); } }
            .svg-frame { position: relative; width: 455px; height: 455px; transform-style: preserve-3d; display: flex; justify-content: center; align-items: center; animation: change-view 2s ease-in infinite; }
            @keyframes change-view { 0%, 50% { transform: rotate(-0deg) skew(00deg) translateX(calc(0 * var(--i))) translateY(calc(-0px * var(--i))); } 70%, 100% { transform: rotate(-80deg) skew(30deg) translateX(calc(45px * var(--i))) translateY(calc(-35px * var(--i))); } }
            svg { position: absolute; transition: 0.5s; transform-origin: center; width: 450px; height: 450px; fill: none; animation: change-view 5s ease-in-out infinite alternate; filter: drop-shadow(0 0 12px #000000); }
            #big-centro, #outter1, #solo-lines, #center, #outter-center, #bottom-dots, #center-lines, #squares, #top-dots { transform-origin: center; animation: rotate 4s ease-in-out infinite alternate; }
            #big-centro { animation-delay: -1.5s; }
            #outter1 { animation-delay: -1.2s; }
            #center { animation-delay: -2.2s; }
            #bottom-dots, #top-dots { animation-duration: 7s; }
            #center-lines, #outter-center { animation-duration: 6s; animation-delay: -3s; }
            @keyframes rotate { to { transform: rotate(360deg); } }
        </style>
    </head>
    <body>
        <div class='container'>
            <section id='Start'>
                <div class='row align-items-center' style='height: 100vh;'>
                    
                    <!-- Left side text content -->
                    <div class='col-lg-6 text-center text-lg-start' style='padding-left: -125px;'>
                        <h1 class='display-4 fw-bold'>
                            <span style='color:#000000; font-size: 1.5rem'>The </span>
                            <span style='color:#ffb30a; font-size: 2rem;'>Intelligent </span>
                            <span style='color:#215185; font-size: 2rem;'>CryptoBrain </span>
                            <span style='color:#000000; font-size: 1.5rem'>for Every User.</span>
                        </h1>
                        <p class='lead' style='color:#000000; font-size: 1.5rem;'>
                            BlockMind fuses blockchain logic with cognitive intelligence, crafting a crypto experience uniquely yours.  
                            Driven by AI, it perceives patterns, predicts potential, and evolves with your decisions.  
                            It’s not just data — it’s insight, redefined.
                        </p>
                    </div>

                    <!-- Right side SVG animation -->
                    <div class='col-lg-6 d-flex justify-content-center'>
                        <div style='max-width: 500px;'>
                            <div id='Loader' class='svg-frame mb-4'>
                                
                                <!--base-->
                                <svg style='--i:0;'>
                                    <g id='big-outter'>
                                        <g id='squares'>
                                            <path id='Ellipse 25' d='M383.931 285.267C374.922 309.242 360.656 330.88 342.188 348.583C323.72 366.285 301.522 379.599 277.234 387.541L277 386.821C301.181 378.915 323.28 365.659 341.667 348.035C360.053 330.411 374.255 308.869 383.225 285L383.931 285.267Z' stroke='#000' stroke-width='6' stroke-linecap='square' stroke-dasharray='1 15' />
                                        </g>
                                        <g id='bottom-dots'>
                                            <path id='Ellipse 22' d='M368.63 350.215C350.6 370.742 328.367 387.15 303.437 398.328C278.508 409.505 251.466 415.189 224.146 414.995C196.827 414.801 169.868 408.733 145.1 397.202C120.332 385.672 98.3341 368.949 80.5984 348.168' stroke='#000' stroke-width='2' stroke-linecap='square' stroke-dasharray='1 15' />
                                            <path id='Ellipse 21' d='M345.779 148.085C360.806 171.738 368.526 199.298 367.972 227.315C367.419 255.333 358.616 282.566 342.666 305.607L342.147 305.248C358.027 282.309 366.79 255.197 367.341 227.303C367.893 199.409 360.207 171.972 345.246 148.423L345.779 148.085Z' stroke='#000' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' stroke-dasharray='0.5 15' />
                                        </g>
                                        <g id='top-dots'>
                                            <path id='Ellipse 20' d='M92.4362 117.897C75.3686 139.201 63.6658 164.291 58.3117 191.059C52.9576 217.826 54.1089 245.488 61.6686 271.718L62.394 271.509C54.8677 245.395 53.7216 217.856 59.0519 191.207C64.3823 164.558 76.0333 139.578 93.0253 118.369L92.4362 117.897Z' stroke='#000' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' stroke-dasharray='0.5 15' />
                                            <path id='Ellipse 23' d='M251.126 44.8182C226.015 41.2368 200.432 42.9587 176.027 49.8728' stroke='#000' stroke-width='2' stroke-linecap='square' stroke-dasharray='0.5 15' />
                                            <path id='Ellipse 24' d='M300.89 118.301C274.736 99.5021 242.549 91.1476 210.597 94.8638' stroke='#000' stroke-width='4' stroke-linecap='square' stroke-dasharray='0.5 15' />
                                        </g>
                                        <g id='Ellipse 12'>
                                            <mask id='path-20-inside-6_115_2' fill='white'>
                                                <path d='M225.5 22C240.73 22 255.911 23.7181 270.755 27.1217L269.171 34.0299C254.846 30.7455 240.197 29.0875 225.5 29.0875L225.5 22Z' />
                                            </mask>
                                            <path d='M225.5 22C240.73 22 255.911 23.7181 270.755 27.1217L269.171 34.0299C254.846 30.7455 240.197 29.0875 225.5 29.0875L225.5 22Z' stroke='#000' stroke-width='8' mask='url(#path-20-inside-6_115_2)' />
                                        </g>
                                        <g id='Ellipse 11'>
                                            <mask id='path-21-inside-7_115_2' fill='white'>
                                                <path d='M76.2195 83.2711C89.0537 69.7053 103.677 57.9521 119.686 48.3363L125.449 57.9312C110.312 67.0233 96.4854 78.1363 84.3502 90.9633L76.2195 83.2711Z' />
                                            </mask>
                                            <path d='M76.2195 83.2711C89.0537 69.7053 103.677 57.9521 119.686 48.3363L125.449 57.9312C110.312 67.0233 96.4854 78.1363 84.3502 90.9633L76.2195 83.2711Z' fill='#000' stroke='#000' stroke-width='8' mask='url(#path-21-inside-7_115_2)' />
                                        </g>
                                    </g>
                                    <circle id='base' cx='228.5' cy='224.5' r='202' stroke='#000' />
                                    <mask id='path-2-inside-1_115_2' fill='white'>
                                        <path d='M165.046 416.801C208.726 431.214 256.011 430.328 299.119 414.287C342.228 398.247 378.591 368.008 402.224 328.548C425.858 289.088 435.354 242.758 429.149 197.183C422.944 151.607 401.408 109.502 368.086 77.7961L363.102 83.0341C395.235 113.608 416.001 154.21 421.985 198.158C427.968 242.106 418.811 286.782 396.022 324.833C373.232 362.884 338.167 392.043 296.598 407.511C255.028 422.979 209.432 423.834 167.312 409.935L165.046 416.801Z' />
                                    </mask>
                                    <path d='M165.046 416.801C208.726 431.214 256.011 430.328 299.119 414.287C342.228 398.247 378.591 368.008 402.224 328.548C425.858 289.088 435.354 242.758 429.149 197.183C422.944 151.607 401.408 109.502 368.086 77.7961L363.102 83.0341C395.235 113.608 416.001 154.21 421.985 198.158C427.968 242.106 418.811 286.782 396.022 324.833C373.232 362.884 338.167 392.043 296.598 407.511C255.028 422.979 209.432 423.834 167.312 409.935L165.046 416.801Z' stroke='#000' stroke-width='8' mask='url(#path-2-inside-1_115_2)' />
                                </svg>

                                <!--big centro-->
                                <svg style='--i:1;'>
                                    <g id='big-centro'>
                                        <circle id='Ellipse 19' cx='227.5' cy='224.5' r='158' stroke='#000' />
                                        <g id='Ellipse 29'>
                                            <mask id='path-23-inside-8_115_2' fill='white'>
                                                <path
                                                    d='M70.3243 192.208C68.873 199.183 67.8935 206.247 67.3925 213.352L70.5546 213.575C71.0456 206.612 72.0055 199.689 73.4278 192.854L70.3243 192.208Z' />
                                            </mask>
                                            <path
                                                d='M70.3243 192.208C68.873 199.183 67.8935 206.247 67.3925 213.352L70.5546 213.575C71.0456 206.612 72.0055 199.689 73.4278 192.854L70.3243 192.208Z'
                                                stroke='#000' stroke-width='4' mask='url(#path-23-inside-8_115_2)' />
                                        </g>
                                        <g id='Ellipse 48'>
                                            <mask id='path-24-inside-9_115_2' fill='white'>
                                                <path
                                                    d='M109.166 116.849C104.328 122.078 99.8478 127.626 95.756 133.457L98.3509 135.278C102.361 129.564 106.751 124.126 111.493 119.002L109.166 116.849Z' />
                                            </mask>
                                            <path
                                                d='M109.166 116.849C104.328 122.078 99.8478 127.626 95.756 133.457L98.3509 135.278C102.361 129.564 106.751 124.126 111.493 119.002L109.166 116.849Z'
                                                stroke='#000' stroke-width='4' mask='url(#path-24-inside-9_115_2)' />
                                        </g>
                                        <g id='Ellipse 49'>
                                            <mask id='path-25-inside-10_115_2' fill='white'>
                                                <path
                                                    d='M156.914 81.6077C150.492 84.6902 144.285 88.2021 138.335 92.1196L140.079 94.7672C145.909 90.9281 151.992 87.4864 158.286 84.4655L156.914 81.6077Z' />
                                            </mask>
                                            <path
                                                d='M156.914 81.6077C150.492 84.6902 144.285 88.2021 138.335 92.1196L140.079 94.7672C145.909 90.9281 151.992 87.4864 158.286 84.4655L156.914 81.6077Z'
                                                stroke='#000' stroke-width='4'
                                                mask='url(#path-25-inside-10_115_2)' />
                                        </g>
                                        <g id='Ellipse 30'>
                                            <mask id='path-26-inside-11_115_2' fill='white'>
                                                <path
                                                    d='M80.0639 287.513C88.7706 307.608 101.547 325.681 117.588 340.592L119.747 338.27C104.026 323.658 91.5052 305.946 82.9726 286.252L80.0639 287.513Z' />
                                            </mask>
                                            <path
                                                d='M80.0639 287.513C88.7706 307.608 101.547 325.681 117.588 340.592L119.747 338.27C104.026 323.658 91.5052 305.946 82.9726 286.252L80.0639 287.513Z'
                                                stroke='#000' stroke-width='4'
                                                mask='url(#path-26-inside-11_115_2)' />
                                        </g>
                                        <g id='Ellipse 38'>
                                            <mask id='path-27-inside-12_115_2' fill='white'>
                                                <path
                                                    d='M284.312 76.5318C260.377 67.3417 234.569 64.0954 209.103 67.0713L210.125 75.8204C234.176 73.0099 258.55 76.0758 281.155 84.7552L284.312 76.5318Z' />
                                            </mask>
                                            <path
                                                d='M284.312 76.5318C260.377 67.3417 234.569 64.0954 209.103 67.0713L210.125 75.8204C234.176 73.0099 258.55 76.0758 281.155 84.7552L284.312 76.5318Z'
                                                fill='#000' stroke='#000' stroke-width='4'
                                                mask='url(#path-27-inside-12_115_2)' />
                                        </g>
                                        <g id='Ellipse 46'>
                                            <mask id='path-28-inside-13_115_2' fill='white'>
                                                <path
                                                    d='M376.684 278.04C385.344 253.908 388.021 228.035 384.485 202.64L375.761 203.855C379.1 227.838 376.572 252.273 368.393 275.064L376.684 278.04Z' />
                                            </mask>
                                            <path
                                                d='M376.684 278.04C385.344 253.908 388.021 228.035 384.485 202.64L375.761 203.855C379.1 227.838 376.572 252.273 368.393 275.064L376.684 278.04Z'
                                                fill='#000' stroke='#000' stroke-width='4'
                                                mask='url(#path-28-inside-13_115_2)' />
                                        </g>
                                        <g id='Ellipse 47'>
                                            <mask id='path-29-inside-14_115_2' fill='white'>
                                                <path
                                                    d='M90.923 321.469C106.609 343.562 127.42 361.52 151.572 373.802L159.476 358.26C137.838 347.256 119.194 331.168 105.141 311.375L90.923 321.469Z' />
                                            </mask>
                                            <path
                                                d='M90.923 321.469C106.609 343.562 127.42 361.52 151.572 373.802L159.476 358.26C137.838 347.256 119.194 331.168 105.141 311.375L90.923 321.469Z'
                                                fill='#000' stroke='#000' stroke-width='4'
                                                mask='url(#path-29-inside-14_115_2)' />
                                        </g>
                                        <circle id='Ellipse 44' cx='227.5' cy='224.5' r='150' stroke='#000' />
                                    </g>
                                </svg>

                                <!--solo lines-->
                                <svg style='--i:2;'>
                                    <g id='solo-lines'>
                                        <g id='left-line'>
                                            <mask id='path-18-inside-4_115_2' fill='white'>
                                                <path
                                                    d='M109.714 84.729C87.8988 102.801 70.6164 125.728 59.2501 151.677C47.8838 177.625 42.7493 205.874 44.2574 234.162C45.7655 262.451 53.8744 289.994 67.9352 314.586C81.9959 339.179 101.618 360.139 125.231 375.789L126.101 374.477C102.693 358.963 83.2407 338.185 69.3019 313.805C55.3631 289.426 47.3245 262.122 45.8294 234.079C44.3344 206.036 49.4244 178.032 60.6921 152.308C71.9598 126.585 89.0923 103.856 110.719 85.9413L109.714 84.729Z' />
                                            </mask>
                                            <path
                                                d='M109.714 84.729C87.8988 102.801 70.6164 125.728 59.2501 151.677C47.8838 177.625 42.7493 205.874 44.2574 234.162C45.7655 262.451 53.8744 289.994 67.9352 314.586C81.9959 339.179 101.618 360.139 125.231 375.789L126.101 374.477C102.693 358.963 83.2407 338.185 69.3019 313.805C55.3631 289.426 47.3245 262.122 45.8294 234.079C44.3344 206.036 49.4244 178.032 60.6921 152.308C71.9598 126.585 89.0923 103.856 110.719 85.9413L109.714 84.729Z'
                                                stroke='#000' stroke-width='2' mask='url(#path-18-inside-4_115_2)' />
                                        </g>
                                        <g id='right-line'>
                                            <mask id='path-19-inside-5_115_2' fill='white'>
                                                <path
                                                    d='M293.127 56.0696C319.474 66.6482 342.971 83.2599 361.731 104.57C380.491 125.88 393.99 151.293 401.144 178.768C408.298 206.243 408.906 235.013 402.92 262.766C396.935 290.518 384.522 316.48 366.68 338.564L365.455 337.574C383.143 315.682 395.448 289.946 401.381 262.434C407.315 234.922 406.712 206.401 399.621 179.165C392.529 151.928 379.147 126.735 360.55 105.61C341.952 84.485 318.659 68.0173 292.541 57.5306L293.127 56.0696Z' />
                                            </mask>
                                            <path
                                                d='M293.127 56.0696C319.474 66.6482 342.971 83.2599 361.731 104.57C380.491 125.88 393.99 151.293 401.144 178.768C408.298 206.243 408.906 235.013 402.92 262.766C396.935 290.518 384.522 316.48 366.68 338.564L365.455 337.574C383.143 315.682 395.448 289.946 401.381 262.434C407.315 234.922 406.712 206.401 399.621 179.165C392.529 151.928 379.147 126.735 360.55 105.61C341.952 84.485 318.659 68.0173 292.541 57.5306L293.127 56.0696Z'
                                                stroke='#000' stroke-width='2' mask='url(#path-19-inside-5_115_2)' />
                                        </g>
                                    </g>
                                </svg>

                                <!--outter center-->
                                <svg style='--i:3;'>
                                    <g id='outter-center'>
                                        <g id='Ellipse 33'>
                                            <mask id='path-13-inside-2_115_2' fill='white'>
                                                <path
                                                    d='M189.514 348.899C211.061 355.133 233.858 355.662 255.672 350.436L255.068 347.917C233.691 353.039 211.35 352.52 190.233 346.411L189.514 348.899Z' />
                                            </mask>
                                            <path
                                                d='M189.514 348.899C211.061 355.133 233.858 355.662 255.672 350.436L255.068 347.917C233.691 353.039 211.35 352.52 190.233 346.411L189.514 348.899Z'
                                                stroke='#000' stroke-width='4' mask='url(#path-13-inside-2_115_2)' />
                                        </g>
                                        <g id='Ellipse 34'>
                                            <mask id='path-14-inside-3_115_2' fill='white'>
                                                <path
                                                    d='M356.914 241.429C359.846 218.667 356.816 195.533 348.12 174.294L341.756 176.899C350.001 197.036 352.874 218.969 350.094 240.551L356.914 241.429Z' />
                                            </mask>
                                            <path
                                                d='M356.914 241.429C359.846 218.667 356.816 195.533 348.12 174.294L341.756 176.899C350.001 197.036 352.874 218.969 350.094 240.551L356.914 241.429Z'
                                                fill='#000' stroke='#000' stroke-width='4'
                                                mask='url(#path-14-inside-3_115_2)' />
                                        </g>
                                        <path id='Subtract'
                                            d='M189.25 109.57L189.432 109.657L189.624 109.592C210.524 102.521 232.956 101.284 254.506 106.014C276.057 110.744 295.909 121.262 311.926 136.436L312.071 136.573H312.27H322.893C344.364 159.613 357.5 190.522 357.5 224.5C357.5 295.745 299.745 353.5 228.5 353.5C157.255 353.5 99.5 295.745 99.5 224.5C99.5 170.522 132.653 124.286 179.708 105.046L189.25 109.57Z'
                                            stroke='#000' />
                                    </g>
                                </svg>

                                <!--center lines-->
                                <svg style='--i:4;'>
                                    <g id='center-lines'>
                                        <circle id='Ellipse 36' cx='225.5' cy='224.5' r='93' stroke='#000' />
                                        <path id='Ellipse 45'
                                            d='M152.445 160.624C135.723 180.1 127.383 205.455 129.26 231.112C131.136 256.768 143.075 280.625 162.451 297.433C181.826 314.242 207.05 322.625 232.575 320.739C258.099 318.853 281.833 306.852 298.555 287.376C315.277 267.9 323.617 242.545 321.74 216.888C319.864 191.232 307.925 167.375 288.549 150.567C269.174 133.758 243.95 125.375 218.425 127.261C192.901 129.147 169.167 141.148 152.445 160.624L152.445 160.624Z'
                                            stroke='#000' stroke-width='8' stroke-dasharray='1 20' />
                                    </g>
                                </svg>

                                <!--center-->
                                <svg style='--i:5;'>
                                    <g id='center'>
                                        <path id='center_2'
                                            d='M173.051 160.818C183.357 152.33 195.57 146.47 208.64 143.741L209.406 147.646L209.598 148.626L210.579 148.435C213.252 147.913 215.974 147.53 218.739 147.291C202.333 148.709 187.389 155.238 175.508 165.278L176.271 164.633L175.626 163.869L173.051 160.818ZM268.968 159.114L271.131 155.768C282.255 163.153 291.42 173.128 297.84 184.836L294.328 186.706L293.445 187.177L293.916 188.06C298.136 195.966 301.026 204.69 302.286 213.934C297.387 178 267.858 149.902 231.266 147.211C244.593 148.191 256.981 152.541 267.584 159.411L268.424 159.955L268.968 159.114ZM300.731 247.009L304.553 248.1C300.733 260.894 293.865 272.57 284.539 282.125L281.715 279.301L281.008 278.594L280.301 279.301C292.512 267.089 300.668 250.821 302.572 232.692C302.101 237.178 301.247 241.55 300.044 245.774L299.77 246.735L300.731 247.009ZM225.346 303.006L225.389 307C212.037 306.982 198.888 303.723 187.073 297.504L188.969 294.006L189.445 293.128L188.567 292.651C186.556 291.559 184.599 290.38 182.7 289.12C194.964 297.259 209.678 302 225.5 302C225.779 302 226.057 301.998 226.335 301.996L225.335 302.006L225.346 303.006ZM149.854 245.575L146.04 246.69C142.449 233.83 142.033 220.29 144.827 207.234L148.705 208.113L149.682 208.335L149.902 207.358C152.935 193.924 159.459 181.81 168.471 172.022C155.761 185.826 148 204.257 148 224.5C148 242.991 154.476 259.969 165.283 273.291C158.889 265.41 154.012 256.249 151.095 246.254L150.814 245.294L149.854 245.575Z'
                                            fill='#000' stroke='#000' stroke-width='2' />
                                        <circle id='dot' cx='225.5' cy='224.5' r='14' stroke='#000' />
                                    </g>
                                </svg>

                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </body>
</html>"
MEASURE [Article] = 
VAR Cards =
    CONCATENATEX (
        'News Data',
        "
          <div class='container'>
            <ul class='has-scrollbar'>
              <li class='scrollbar-item'>
                <div class='blog-card'>
                  <figure class='card-banner img-holder' style='--width: 1000; --height: 600;'>
                    <img src='" & 'News Data'[Article Banner/Poster URL] & "' width='500' height='600' loading='lazy' alt='New technology is not good or evil in and of itself' class='img-cover'>
                  </figure>
                  <div class='card-content'>
                    <ul class='card-meta-list'>
                      <li style='list-style-type: none; margin-left: 0; padding-left: 0; 'color: transparent;''>" & 'News Data'[Author] & " | " & 'News Data'[Source] & " at " & 'News Data'[Published dt] & "</li>
                    </ul>
                    <h3 class='h4'><a href='" & 'News Data'[Article URL] & "' class='card-title hover:underline'>" & 'News Data'[Title] & "</a></h3>
                    <p class='card-text'>" & 'News Data'[Description] & "</p>
                  </div>
                </div>
              </li>
            </ul>
          </div>
        ",
        "",
        'News Data'[Published dt]
    )

RETURN
"<!DOCTYPE html>
<html>
  <head>
    <style>
      :root { --eerie-black_80: hsla(225, 9%, 9%, 0.8); --eerie-black_60: hsla(225, 9%, 9%, 0.6); --eerie-black: hsl(225, 9%, 9%); --light-gray-1: hsl(0, 0%, 80%); --light-gray-2: hsl(240, 2%, 81%); --gainsboro: hsl(240, 9%, 91%); --cultured: hsl(300, 8%, 95%); --blue-ryb: hsl(232, 100%, 60%); --white_20: hsla(0, 0%, 100%, 0.2); --white: hsl(0, 0%, 100%); --ff-inter: 'Inter', sans-serif; --fs-1: 3.6rem; --fs-2: 3.2rem; --fs-3: 2.4rem; --fs-4: 2.2rem; --fs-5: 2rem; --fs-6: 1.8rem; --fs-7: 1.5rem; --fs-8: 1.4rem; --fs-9: 1.3rem; --fw-700: 700; --fw-500: 500; --fw-300: 300; --section-padding: 50px; --radius-16: 16px; --radius-pill: 200px; --radius-circle: 50%; --transition-1: 0.25s ease; --transition-2: 0.5s ease; }
      *, *::before, *::after { margin: 0; padding: 0; box-sizing: border-box; }
      li { list-style: none; }
      a, img, span, input, button, ion-icon { display: block; }
      a { color: inherit; text-decoration: none; }
      img { height: auto; }
      input, button { background: none; border: none; font: inherit; }
      input { width: 100%; outline: none; }
      button { cursor: pointer; }
      ion-icon { pointer-events: none; }
      html { font-family: var(--ff-inter); font-size: 10px; scroll-behavior: smooth; }
      body { background-color: var(--white); color: var(--eerie-black); font-size: 1.6rem; line-height: 1.5; }
      body.active { overflow: hidden; }
      :focus-visible { outline-offset: 4px; }
      ::-webkit-scrollbar { width: 10px; }
      ::-webkit-scrollbar-track { background-color: hsl(0, 0%, 98%); }
      ::-webkit-scrollbar-thumb { background-color: hsl(0, 0%, 80%); }
      ::-webkit-scrollbar-thumb:hover { background-color: hsl(0, 0%, 70%); }
      .section { margin-inline: 15px; }
      .hover\:underline { text-underline-offset: 3px; }
      .hover\:underline:is(:hover, :focus) { text-decoration: underline; }
      .section:not(.header, .footer-bottom) { padding-block-end: var(--section-padding); border-block-end: 1px solid var(--light-gray-2); }
      .h1, .h2, .h3, .h4, .h5 { line-height: 1.2; }
      .h1, .h2 { font-weight: var(--fw-300); }
      .h1 { font-size: var(--fs-1); }
      .h2 { font-size: var(--fs-2); }
      .h3 { font-size: var(--fs-3); }
      .h4 { font-size: var(--fs-4); }
      .h5 { font-size: var(--fs-6); }
      .section-subtitle { padding-block: 15px; }
      .img-holder { aspect-ratio: var(--width) / var(--height); background-color: var(--light-gray-1); overflow: hidden; }
      .img-cover { width: 100%; height: 100%; object-fit: cover; }
      .has-scrollbar { display: flex; gap: 10px; overflow-x: auto; scroll-snap-type: inline mandatory; padding-block-end: 20px; margin-block-end: -20px; margin-inline: -15px; padding-inline: 15px; }
      .has-scrollbar::-webkit-scrollbar { height: 10px; }
      .has-scrollbar::-webkit-scrollbar-track { background: transparent; }
      .has-scrollbar::-webkit-scrollbar-thumb { background-color: transparent; border-radius: var(--radius-pill); }
      .has-scrollbar::-webkit-scrollbar-button { width: 10px; }
      .has-scrollbar:is(:hover, :focus-within)::-webkit-scrollbar-thumb { background-color: var(--light-gray-1); }
      .scrollbar-item { min-width: 70%; scroll-snap-align: center; }
      .blog-card .card-banner { position: relative; border-radius: var(--radius-16); margin-block-end: 15px; }
      .avatar-list { display: flex; flex-direction: row-reverse; }
      .avatar-list.absolute { position: absolute; bottom: 10px; left: 10px; }
      .avatar-item:not(:first-child) { margin-inline-end: -15px; }
      .avatar { width: 40px; border-radius: var(--radius-circle); background: none; border: 5px solid var(--white_20); transition: var(--transition-1); will-change: transform; }
      .avatar-list.absolute .avatar:is(:hover, :focus) { transform: scale(0.9); border-color: var(--white); }
      .card-meta-list { display: flex; gap: 5px; }
      .card-tag { background-color: var(--cultured); font-size: var(--fs-9); font-weight: var(--fw-500); padding: 2px 8px; border-radius: var(--radius-pill); transition: var(--transition-1); }
      .card-tag:is(:hover, :focus) { background-color: var(--gainsboro); }
      .blog-card .card-title { margin-block: 8px 12px; text-decoration-thickness: 2px; }
      .blog-card .card-text { font-size: var(--fs-8); display: -webkit-box; -webkit-box-orient: vertical; -webkit-line-clamp: 3; line-clamp: 3; overflow: hidden; padding-inline-end: 20px; }
      .grid-list { display: grid; gap: 30px; }
      .top-author { display: none; }
      .recent { padding-block-start: 15px; }
      .recent .section-title .strong { display: block; }
      .recent .section-title { margin-block-end: 20px; }
      .recent .btn { margin-inline: auto; margin-block: 50px 30px; }
      .section.recommended { border-block-end: none; }
      .recommended .grid-list { grid-template-columns: 1fr 1fr; gap: 10px; }
      .recommended .blog-card { margin-block-end: 5px; }
      @media (min-width: 575px) { :root { --fs-1: 6rem; --fs-2: 4.8rem; } .section { margin-inline: 30px; } .newsletter-form, .btn { --fs-6: 2.2rem; } .newsletter-form .email-field { font-size: var(--fs-6); padding-inline-end: 170px; } .btn { padding: 14px 30px; } .section-subtitle { font-size: var(--fs-6); } .has-scrollbar { margin-inline: -30px; padding-inline: 30px; } .has-scrollbar::-webkit-scrollbar-button { width: 15px; } .scrollbar-item { min-width: 40%; } .grid-list { grid-template-columns: 1fr 1fr; column-gap: 10px; } .recommended .grid-list, .footer-top { grid-template-columns: repeat(3, 1fr); } }
      @media (min-width: 768px) { :root { --fs-1: 7.2rem; --fs-2: 5.5rem; --radius-16: 26px; } .section { margin-inline: 50px; } .has-scrollbar { margin-inline: -50px; padding-inline: 50px; gap: 15px; } .has-scrollbar::-webkit-scrollbar-button { width: 25px; } .scrollbar-item { min-width: 30%; } .grid-list { gap: 40px 15px; } .top-author { display: block; text-align: right; } .recent .title-wrapper { display: flex; justify-content: space-between; margin-block-end: 10px; } .top-author .avatar-item:not(:first-child) { margin-inline-end: -25px; } .top-author .span { color: var(--eerie-black_80); font-size: var(--fs-8); margin-block-start: 10px; } .avatar.large { border: 6px solid var(--white); width: 70px; } .avatar.large:is(:hover, :focus) { transform: translateY(-3px); } .recommended .grid-list { grid-template-columns: repeat(4, 1fr); column-gap: 15px; } }
      @media (min-width: 992px) { :root { --fs-1: 8.8rem; --section-padding: 60px; } .section { margin-inline: 60px; } .has-scrollbar { margin-inline: -60px; padding-inline: 60px; } .has-scrollbar::-webkit-scrollbar-button { width: 30px; } .btn { --fs-6: 2.4rem; padding: 18px 36px; } .grid-list { grid-template-columns: repeat(3, 1fr); } .top-author .avatar { width: 85px; } .recommended .grid-list { grid-template-columns: repeat(6, 1fr); } }
      @media (min-width: 1200px) { :root { --fs-1: 9.2rem; --fs-2: 6rem; --fs-3: 2.6rem; --fs-4: 2.4rem; } .section { margin-inline: 70px; } .has-scrollbar { margin-inline: -70px; padding-inline: 70px; } .has-scrollbar::-webkit-scrollbar-button { width: 35px; } .card-tag {--fs-9: 1.4rem; padding: 4px 10px; } .grid-list { row-gap: 50px; } .section.hero { padding-block: 50px 80px; } .hero-title { margin-block-end: 50px; } .top-author .avatar { width: 100px; } .recent .btn { margin-block-start: 70px; } }
    </style>
    <link rel='preconnect' href='https://fonts.googleapis.com'>
    <link rel='preconnect' href='https://fonts.gstatic.com' crossorigin>
    <link href='https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;700&display=swap' rel='stylesheet'>
  </head>
  <body>
    <main>
      <article>
        <section class='section featured' aria-label='featured post'>
        " & Cards & "
        </section>
      </article>

    </main>
    <script type='module' src='https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js'></script>
    <script nomodule src='https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js'></script>
  </body>
</html>"
MEASURE [BG_Color] = 
SWITCH(
    [Selected_Theme],
    "Dark", "#000000", // Dark gray
    "Light", "#ffffff" // White
)

MEASURE [Boarder Shadow Color] = 
SWITCH(
    [Selected_Theme],
    "Dark", "#ffffff", // White
    "Light", "#000000" // Dark gray
)

MEASURE [Button Text] = 
[SelectedPageValue]
MEASURE [Coin Contributing Type] = 
VAR TotalProfitLoss =
    SUMX (
        ALL ( 'User Portfolio Based Crypto Data' ),
        'User Portfolio Based Crypto Data'[Current Price] - 'User Portfolio Based Crypto Data'[Price on Puchase Date]
    )

VAR CoinPnL =
    SUMX (
        'User Portfolio Based Crypto Data',
        'User Portfolio Based Crypto Data'[Current Price] - 'User Portfolio Based Crypto Data'[Price on Puchase Date]
    )

RETURN
    IF (
        SIGN(CoinPnL) = SIGN(TotalProfitLoss),
        "Contributing",
        "Not Contributing"
    )

MEASURE [Coin Page] = 
VAR CurrentPrice = VALUE(SELECTEDVALUE('User Portfolio Based Crypto Data'[Current Price]))
VAR Min24h = VALUE(SELECTEDVALUE('User Portfolio Based Crypto Data'[24h Low Price]))
VAR Max24h = VALUE(SELECTEDVALUE('User Portfolio Based Crypto Data'[24h High Price]))

VAR Down = "↓"
VAR Up = "↑"
VAR Trend_Value = [1H Price Change %]
VAR Display_Value = FORMAT(ABS(Trend_Value * 100), "0.00") & "%"

RETURN 
"<!DOCTYPE html>
<html>
  <head>
    <style>
      body {
        font-family: 'Segoe UI', sans-serif;
        margin: 0;
        padding: 0;
      }

      .coin-container {
        width: 400px;
        padding: 10px;
        box-sizing: border-box;
      }


      .coin-header {
        display: flex;
        align-items: center;
        font-size: 25px;
        font-weight: 700;
        color: #111;
      }

      .coin-header img {
        width: 50px;
        height: 50px;
        border-radius: 100%;
        margin-right: 10px;
      }

      .coin-symbol {
        font-size: 16px;
        font-weight: 400;
        color: #888;
        margin-left: 6px;
      }

      .coin-rank {
        background-color: #f1f3f5;
        color: #333;
        font-size: 16px;
        padding: 3px 8px;
        border-radius: 15px;
        margin-left: 10px;
      }

      .coin-price {
        font-size: 36px;
        font-weight: 700;
        color: #111;
        margin-top: 6px;
        display: flex;
        align-items: center;
      }

      .price-change {
        font-size: 16px;
        font-weight: 600;
        margin-left: 10px;
      }

      .btc-convert {
        font-size: 14px;
        color: #444;
        margin-top: -6px;
        margin-bottom: 12px;
      }

      .btc-convert span {
        color: #008000;
        font-weight: 600;
        margin-left: 6px;
      }

      .range-bar {
        margin-top: 8px;
      }

      .range-track {
        position: relative;
        height: 8px;
        width: 400px;
        background: linear-gradient(to right, #f4c20d, #2c3e50, #e5e5e5);
        border-radius: 10px;
      }

      .range-fill {
        height: 100%;
        background: linear-gradient(to right, #f4c20d, #2c3e50);
        border-radius: 10px 0 0 10px;
        width: " & FORMAT((DIVIDE(CurrentPrice - Min24h, Max24h - Min24h, 0) * 100), "0.0") & "%;
      }

      .range-labels {
        display: flex;
        justify-content: space-between;
        font-size: 13px;
        font-weight: 500;
        color: #333;
        margin-top: 4px;
      }
    </style>
  </head>
  <body>
    <div class='coin-container'>
      <!-- Header -->
      <div class='coin-header'>
        <img src='" & SELECTEDVALUE('User Portfolio Based Crypto Data'[Image URL]) & "' />
        " & SELECTEDVALUE('User Portfolio Based Crypto Data'[Coin Name]) & "
        <span class='coin-symbol'>" & SELECTEDVALUE('User Portfolio Based Crypto Data'[Symbol]) & " Price</span>
        <span class='coin-rank'>#" & VALUE(SELECTEDVALUE('User Portfolio Based Crypto Data'[Market Cap Rank])) & "</span>
      </div>

      <!-- Price -->
      <div class='coin-price'>
        $" & VALUE(SELECTEDVALUE('User Portfolio Based Crypto Data'[Current Price])) & "
        <span class='price-change' style='color:" & [Trend_Color] & ";'>" 
        & 
        SWITCH(
            TRUE(),
            ISBLANK(Trend_Value), BLANK(),
            Trend_Value < 0, Down & " " & Display_Value,
            Up & " " & Display_Value
        ) 
        & "</span>
      </div>

      <br>

      <!-- BTC Conversion -->
      <div class='btc-convert'>
        1.0000 "&SELECTEDVALUE('User Portfolio Based Crypto Data'[Symbol])&"<span>$" & VALUE(SELECTEDVALUE('User Portfolio Based Crypto Data'[Current Price])) & "</span>
      </div>

      <!-- Progress Bar -->
      <div class='range-bar'>
        <div class='range-track'>
          <div class='range-fill'></div>
        </div>
        <div class='range-labels'>
          <span>$" & VALUE(SELECTEDVALUE('User Portfolio Based Crypto Data'[24h Low Price])) & "</span>
          <span>24h Range</span>
          <span>$" & VALUE(SELECTEDVALUE('User Portfolio Based Crypto Data'[24h High Price])) & "</span>
        </div>
      </div>
    </div>
  </body>
</html>"

MEASURE [Coin Table] = 
VAR TableHeader = "
<div style='max-height: 400px; overflow-y: hidden;'>
    <table style='width: 100%; border-collapse: collapse; font-family: Segoe UI; font-size: 13px;'>
        <thead>
            <tr style='background-color: #f2f2f2;'>
                <th style='text-align: center; padding: 8px;'>#Rank</th>
                <th style='text-align: center; padding: 8px;'>Coin</th>
                <th style='text-align: center; paddi40: 8px;'>Price</th>
                <th style='text-align: center; padding: 8px; padding-right: 24px;'>24h Change</th>
                <th style='text-align: cente25 padding: 8px;'>Market Cap</th>
                <th style='text-align: center; padding: 8px;'>24h Volume</th>
                <th style='text-align: left; padding: 8px;'>All-Time High</th>
                <th style='text-align: left; padding: 8px;'>All-Time Low</th>
            </tr>
        </thead>
        <tbody>
"

VAR TableRows =
CONCATENATEX (
    'User Portfolio Based Crypto Data',
    "<tr>
        <td style='padding: 6px; text-align: center;'>" & 'User Portfolio Based Crypto Data'[Market Cap Rank] & "</td>
        <td style='padding: 6px;'>
            <span style='display: inline-flex; align-items: center; gap: 6px;'>
                <img src='" & 'User Portfolio Based Crypto Data'[Image URL] & "' width='20' height='20' style='border-radius: 50%;'/>
                <span><b>" & 'User Portfolio Based Crypto Data'[Coin Name] & "</b> " & 'User Portfolio Based Crypto Data'[Symbol] & "</span>
            </span>
        </td>
        <td style='padding: 6px; text-align: center;'>$" & 'User Portfolio Based Crypto Data'[Current Price] & "</td>
        <td style='padding: 6px; text-align: center; padding-right: 24px; color:"&IF([24Hr Price Change %] < 0,"#ff3a33","#00a83e")&"'>" & FORMAT([24Hr Price Change %] * 100, "0.00") & "%" & "</td>
        <td style='padding: 6px; text-align: center;'>" & FORMAT('User Portfolio Based Crypto Data'[Market Cap], "$#,##0,,.00M") & "</td>
        <td style='padding: 6px; text-align: center;'>" & FORMAT('User Portfolio Based Crypto Data'[Total Volume], "$#,##0,,.00M") & "</td>
        <td style='padding: 6px;'>
            $" & FORMAT('User Portfolio Based Crypto Data'[All-Time High Price], "#,##0") & "
        </td>
        <td style='padding: 6px;'>
            $" & FORMAT('User Portfolio Based Crypto Data'[All-Time Low Price], "#,##0.00") & "
        </td>
    </tr>",
    UNICHAR(10)
)

VAR TableFooter = "
        </tbody>
    </table>
</div>
"

RETURN
    TableHeader & TableRows & TableFooter

MEASURE [Coinwise P/L %] = 
DIVIDE (
    SUM ( 'User Portfolio Based Crypto Data'[Current Price] ) - 
    SUM ( 'User Portfolio Based Crypto Data'[Price on Puchase Date] ),
    SUM ( 'User Portfolio Based Crypto Data'[Price on Puchase Date] ),
    0
) * 100

MEASURE [Contact] = 
 ""
MEASURE [Developer] = 
"<!DOCTYPE html>
<html>
<head>
  <style>
    html, body {
      margin: 0;
      padding: 0;
      background-color: transparent !important;
    }
    .user-container {
      position: relative;
      display: inline-block;
    }
    .user-image img {
      width: 63px;
      height: 58px;
      border-radius: 50%;
      border: 2px solid #ccc;
      display: block;
    }
    .tag {
      position: absolute;
      bottom: 0;
      right: 0;
      background-color: #0078D4;
      color: white;
      font-size: 10px;
      padding: 2px 6px;
      border-radius: 10px;
      font-family: Segoe UI, sans-serif;
    }
    a {
      text-decoration: none;
    }
  </style>
</head>
<body style='background-color:transparent !important;'>
  <div class='user-container'>
    <a href='https://ankit-sharma-07.netlify.app/' target='_blank'>
      <div class='user-image'>
        <img src='" & SELECTEDVALUE('Develover Detail'[Image URL]) & "' alt='User Image'/>
      </div>
    </a>
    <div class='tag'>Dev</div>
  </div>
</body>
</html>"

MEASURE [DeveloperImage] = 
VAR _imageUrl = FIRSTNONBLANK('User MetaData'[Image URL], 1)
VAR _name = FIRSTNONBLANK('User MetaData'[Name], 1)
VAR _email = FIRSTNONBLANK('User MetaData'[Mail Address], 1)
VAR _role = "Dashboard Developer"
VAR _tooltip = 
    "🧠 " & _role & UNICHAR(10) & 
    "👤 " & _name & UNICHAR(10) & 
    "📧 " & _email
RETURN 
"<svg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'>
  <defs>
    <clipPath id='circleView'>
      <circle cx='32' cy='32' r='32' />
    </clipPath>
  </defs>
  <title>" & _tooltip & "</title>
  <image href='" & _imageUrl & "' width='64' height='64' clip-path='url(#circleView)' preserveAspectRatio='xMidYMid slice' />
</svg>"

MEASURE [Final Sentiment Alert] = 
VAR NewsScore = CALCULATE(
    AVERAGE('News Data'[Sentiment Score]),
    REMOVEFILTERS('News Data'),
    FILTER('News Data', 'News Data'[coin] = SELECTEDVALUE('News Data'[coin]))
)

VAR RedditScore = VALUE(SELECTEDVALUE('User Portfolio Based Crypto Data'[Reddit Sentiment]))

VAR FinalScore = DIVIDE(NewsScore + RedditScore, 2)
VAR ScaledScore = IF(FinalScore >= 0, FinalScore * 100, 0)

VAR CoinName = SELECTEDVALUE('News Data'[coin])

VAR AlertLevel = 
    SWITCH(TRUE(),
        ScaledScore >= 80, "green",
        ScaledScore >= 60, "blue",
        ScaledScore >= 40, "orange",
        ScaledScore >= 20, "caution",
        "red"
    )

VAR AlertIcon = 
    SWITCH(AlertLevel,
        "green", "https://img.icons8.com/fluency/48/ok.png",
        "blue", "https://img.icons8.com/color/48/info--v1.png",
        "orange", "https://img.icons8.com/color/48/error--v1.png",
        "caution", "https://img.icons8.com/color/48/box-important--v1.png",
        "https://img.icons8.com/color/48/high-risk.png"  // Red Alert
    )

VAR FinalMessage = 
    SWITCH(AlertLevel,
        "green", "✅ " & CoinName & " has excellent sentiment across News & Reddit. Market looks optimistic!",
        "blue", "ℹ️ Positive signals for " & CoinName & ". Consider keeping it on your watchlist.",
        "orange", "⚠️ " & CoinName & " shows mixed sentiment. Stay alert and monitor developments.",
        "caution", "❗ Sentiment for " & CoinName & " is trending negative. Caution advised.",
        "🚨 Very negative sentiment for " & CoinName & ". Avoid impulsive decisions!"
    )

RETURN
"<!DOCTYPE html>
<html>
  <head>
    <style>
      .alert-container {
        font-family: 'Segoe UI', sans-serif;
        max-width: 550px;
        display: flex;
        align-items: center;
        gap: 5px;
      }
      .alert-icon {
        width: 48px;
        height: 48px;
      }
      .alert-text {
        font-size: 15px;
        font-weight: 500;
        color: #333;
        line-height: 1.4;
      }
    </style>
  </head>
  <body>
    <div class='alert-container'>
      <img class='alert-icon' src='" & AlertIcon & "' alt='alert'/>
      <div class='alert-text'>" & FinalMessage & "</div>
    </div>
  </body>
</html>"

MEASURE [Font_Color] = 
SWITCH(
    [Selected_Theme],
    "Dark", "#ffffff",
    "Light", "#000000"
)

MEASURE [Insights Msg Panel] = 
VAR Insight1 = [Investment Decision Insight]
VAR Insight2 = [₹10K Investment Insight]
VAR Insight3 = [SMA 200 Insight]
VAR Insight4 = [Volatility Insight]
VAR Insight5 = [Price Growth Insight]

RETURN
"
<!DOCTYPE html>
<html>
<head>
<style>
@import url('https://fonts.googleapis.com/css?family=Inter:400,600&display=swap');
body {
    font-family: Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif;
    font-size: 13px;
    line-height: 1;
    margin: 0;
    padding: 0;
}
.title {
    text-align: center;
    font-size: 25px;
    font-weight: 700;
    color: #333;
    margin: 10px 0 10px 0;
}
.container {
    display: flex;
    flex-direction: column;
    gap: 10px;
    padding: 5px;
}
.card {
    display: flex;
    align-items: flex-start;
    background: #ffffff;
    border-left: 5px solid #ffffff;
    padding: 5px 5px;
    border-radius: 4px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}
.card .icon {
    font-size: 20px;
    margin-right: 10px;
}
.card .text {
    font-size: 20px;
    font-weight: 600;
    color: #333;
}
</style>
</head>
<body>
<div class='title'>Trend Performance Report</div>
<div class='container'>
  <div class='card info'>
    <div class='text'>" & Insight1 & "</div>
  </div>
  <div class='card investment'>
    <div class='text'>" & Insight2 & "</div>
  </div>
  <div class='card warning'>
    <div class='text'>" & Insight3 & "</div>
  </div>
  <div class='card stable'>
    <div class='text'>" & Insight4 & "</div>
  </div>
  <div class='card decline'>
    <div class='text'>" & Insight5 & "</div>
  </div>
</div>
</body>
</html>
"

MEASURE [IsUserInPortfolio] = 
IF(
    COUNTROWS(
        FILTER(
            'User Portfolio Assets',
            'User Portfolio Assets'[User Mail] = USERPRINCIPALNAME()
        )
    ) > 0,
    TRUE(),
    FALSE()
)

MEASURE [Loss] = 
VAR Buy = SELECTEDVALUE('User Portfolio Based Crypto Data'[Price on Puchase Date])
VAR CurrentPrice = SELECTEDVALUE('User Portfolio Based Crypto Data'[Current Price])
VAR Change = Buy - CurrentPrice
RETURN
    IF(Change > 0, Change, 0)

MEASURE [Message] = 
    IF(
        [IsUserInPortfolio],
        "Explore Your Personalized Dashboard →",
        "Activate Access of Dashboard →" 
    )
MEASURE [Neutral %] = 
VAR neu = SELECTEDVALUE('User Portfolio Based Crypto Data'[Neutral Mentions])
VAR total = 
    SELECTEDVALUE('User Portfolio Based Crypto Data'[Positive Mentions]) +
    SELECTEDVALUE('User Portfolio Based Crypto Data'[Neutral Mentions]) +
    SELECTEDVALUE('User Portfolio Based Crypto Data'[Negative Mentions])
VAR pct = DIVIDE(neu, total, 0)
VAR outcome = FORMAT(pct, "0.0%")
RETURN

" "& outcome & " of Total Mentions" 
MEASURE [News] = 
VAR Cards =
    CONCATENATEX (
        'News Data',
        "
                <div class='tw-border-qeh tw-border-hn4 tw-border-444 tw-border-gray-4qf tw-pb-x4b tw-kl7 col-ah7'>
                    <a href='"&'News Data'[Article URL]&"'>
                        <img class='tw-object-4k4 tw-rounded-voz tw-w-fxg tw-mb-act' src='" & 'News Data'[Article Banner/Poster URL] & "'>
                    </a>
                    <div class='tw-kl7 col-ah7 tw-flex-2vy col-pf5'>
                        <a class='tw-flex-2vy style-mFEYg' href='"&'News Data'[Article URL]&"' id='style-mFEYg'>
                            <div class='tw-mb-act tw-font-ng7 text-dby text-dic text-qx8 tw-leading-cv8'>" & 'News Data'[Title] & "</div>
                        </a>
                        <div class='tw-kl7 tw-mb-ezz'>
                            <a href='/en/coins/bitcoin'>
                                <button type='button' class='tw-mr-8w8 tw-bg-gray-3i1 hovertw-bg-gray-o6g item-jva tw-justify-d75 tw-font-gg7 tw-rounded-voz select-kwz tw-inline-bew'>
                                    <div class='text-5dy tw-leading-q61 text-dby text-vml tw-font-gg7'>
                                        <div class='tw-kl7'>
                                            <img width='16px' height='16px' class='tw-mr-1r8 tw-self-efy' src='"&SELECTEDVALUE('User Portfolio Based Crypto Data'[Image URL])&"'>&nbsp; <strong>"&SELECTEDVALUE('User Portfolio Based Crypto Data'[Symbol])&"</strong>&nbsp;<span class='gecko-ory' style='color:" & [News_Trend_Color] & ";'>&nbsp;"& [News_Trend] &"
                                            </span>
                                        </div>
                                    </div>
                                </button>
                            </a>
                        </div>
                        <div class='tw-my-y4c text-yye tw-font-gg7 text-k6w tw-leading-bt3'> " & 'News Data'[Author] & " | " & 'News Data'[Source] & " </div>
                        <div class='tw-font-vvo text-o3w text-k6w tw-leading-bt3'> " & 'News Data'[Published dt] & " </div>
                    </div>
                </div>
        ",
        "",
        'News Data'[Published dt]
    )

RETURN
"<!DOCTYPE html>
<html>
   <head>
      <style>
        @import url('https://fonts.googleapis.com/css?family=Inter:100,200,300,400,500,600,700,800,900&display=swap'); 
        @font-face { 
        font-family:'Font Awesome 6 Pro';
        font-style:normal;
        font-weight:400;
        font-display:block;
        src:url(./fonts/fa-regular-400-c50debec0910940c4b721ab00608224686660766a7b7e2679486da3d195a084d.woff2) format('woff2'),url(./fonts/fa-regular-400-18f225ab24ea145c7f6cb8d1551d8c69810cd84efd9a471349a8dcabc8d5ae1c.ttf) format('truetype');
        } 
        @font-face { 
        font-family:'Font Awesome 6 Pro';
        font-style:normal;
        font-weight:900;
        font-display:block;
        src:url(./fonts/fa-solid-900-7e30fe6941a2083f005e1c0cd7cbb44cdc101623a6a6ce8293bc9102f092e595.woff2) format('woff2'),url(./fonts/fa-solid-900-03c73c5087b42a718fe230c724e36efb37864caa464f7264e92290a973a7de9e.ttf) format('truetype');
        } 
        body {  
            font-family:Inter,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;
            font-size:13px;
            line-height:1.425;
        }  
        body { 
        /* CSS Variables that may have been missed get put on body */ 
            --tw-translate-x:  0;  
            --tw-translate-y:  0;  
            --tw-rotate:  0;  
            --tw-skew-x:  0;  
            --tw-skew-y:  0;  
            --tw-scale-x:  1;  
            --tw-scale-y:  1;  
            --tw-ring-offset-width:  0px;  
            --tw-ring-offset-color:  #fff;  
            --tw-ring-color:  rgba(59,130,246,.5);  
            --tw-ring-offset-shadow:  0 0 #0000;  
            --tw-ring-shadow:  0 0 #0000;  
            --tw-shadow:  0 0 #0000;  
            --tw-translate-x:  0;  
            --tw-translate-y:  0;  
            --tw-rotate:  0;  
            --tw-skew-x:  0;  
            --tw-skew-y:  0;  
            --tw-scale-x:  1;  
            --tw-scale-y:  1;  
            --tw-ring-offset-width:  0px;  
            --tw-ring-offset-color:  #fff;  
            --tw-ring-color:  rgba(59,130,246,.5);  
            --tw-ring-offset-shadow:  0 0 #0000;  
            --tw-ring-shadow:  0 0 #0000;  
            --tw-shadow:  0 0 #0000;  
            --tw-translate-x:  0;  
            --tw-translate-y:  0;  
            --tw-rotate:  0;  
            --tw-skew-x:  0;  
            --tw-skew-y:  0;  
            --tw-scale-x:  1;  
            --tw-scale-y:  1;  
            --tw-ring-offset-width:  0px;  
            --tw-ring-offset-color:  #fff;  
            --tw-ring-color:  rgba(59,130,246,.5);  
            --tw-ring-offset-shadow:  0 0 #0000;  
            --tw-ring-shadow:  0 0 #0000;  
            --tw-shadow:  0 0 #0000;  
            --tw-text-opacity:  1;  
            --tw-border-opacity:  1;  
            --tw-bg-opacity:  1;  
            --tw-bg-opacity:  1;  
            --tw-text-opacity:  1;  
            --tw-text-opacity:  1;  
            --tw-text-opacity:  1;  
            --tw-bg-opacity:  1;  
            --tw-shadow:  0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);  
            --tw-shadow-colored:  0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);  
            --tw-ring-offset-shadow:  var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);  
            --tw-ring-shadow:  var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);  
            --tw-ring-opacity:  1;  
            --tw-ring-color:  rgb(239 242 245/var(--tw-ring-opacity,1)); 
            --fa:  '\f078';  
            --tw-text-opacity:  1;  
            --fa:  '\f0d8';  
            --tw-bg-opacity:  1;  
        } 

        * { 
            border: 0 solid #e5e7eb; 
            box-sizing: border-box;
        } 

        * { 
            --tw-translate-x: 0; 
            --tw-translate-y: 0; 
            --tw-rotate: 0; 
            --tw-skew-x: 0; 
            --tw-skew-y: 0; 
            --tw-scale-x: 1; 
            --tw-scale-y: 1; 
            --tw-ring-offset-width: 0px; 
            --tw-ring-offset-color: #fff; 
            --tw-ring-color: rgba(59,130,246,.5); 
            --tw-ring-offset-shadow: 0 0 #0000; 
            --tw-ring-shadow: 0 0 #0000; 
            --tw-shadow: 0 0 #0000; 
        } 

        body { 
            display: flex; 
            flex-direction: column; 
            font-family: Inter,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol; 
            font-size: 13px; 
            line-height: 1.425; 
            margin: 0;
        } 

        html { 
            min-height: 100%; 
            position: relative;
        } 

        :root { 
            -moz-tab-size: 4; 
            -o-tab-size: 4; 
            tab-size: 4;
        } 

        .tw-mt-wf8 { 
            margin-top: 1rem;
        } 

        .tw-w-fxg { 
            width: 100%;
        } 

        @media (min-width: 768px){ 
        .mdtw-mt-76x { 
            margin-top: 2rem;
        } 
        }     

        *,:after,:before { 
            border: 0 solid #e5e7eb; 
            box-sizing: border-box;
        } 

        *,:after,:before { 
            --tw-translate-x: 0; 
            --tw-translate-y: 0; 
            --tw-rotate: 0; 
            --tw-skew-x: 0; 
            --tw-skew-y: 0; 
            --tw-scale-x: 1; 
            --tw-scale-y: 1; 
            --tw-ring-offset-width: 0px; 
            --tw-ring-offset-color: #fff; 
            --tw-ring-color: rgba(59,130,246,.5); 
            --tw-ring-offset-shadow: 0 0 #0000; 
            --tw-ring-shadow: 0 0 #0000; 
            --tw-shadow: 0 0 #0000; 
        } 

        :backdrop { 
            --tw-translate-x: 0; 
            --tw-translate-y: 0; 
            --tw-rotate: 0; 
            --tw-skew-x: 0; 
            --tw-skew-y: 0; 
            --tw-scale-x: 1; 
            --tw-scale-y: 1; 
            --tw-ring-offset-width: 0px; 
            --tw-ring-offset-color: #fff; 
            --tw-ring-color: rgba(59,130,246,.5); 
            --tw-ring-offset-shadow: 0 0 #0000; 
            --tw-ring-shadow: 0 0 #0000; 
            --tw-shadow: 0 0 #0000; 
        } 

        h2 { 
            margin: 0;
        } 

        .tw-mb-act { 
            margin-bottom: 1rem;
        } 

        .text-bfo { 
            font-size: 1.25rem; 
            line-height: 1.75rem;
        } 

        .tw-font-ng7 { 
            font-weight: 700;
        } 

        .tw-leading-do4 { 
            line-height: 2rem;
        } 

        .text-dby { 
            --tw-text-opacity: 1; 
            color: #0f172a;
        } 

        .text-dby { 
            color: rgb(15 23 42/var(--tw-text-opacity,1));
        } 

        @media (min-width: 768px){ 
        .text-54g { 
            font-size: 1.5rem; 
            line-height: 2rem;
        } 
        }     

        .grid-6z2 { 
            display: grid;
        } 

        .tw-gap-qsq { 
            gap: 1.25rem;
        } 

        @media (min-width: 768px){ 
        .grid-aoz { 
            grid-template-columns: repeat(4,minmax(0,1fr));
        } 
        }     

        .tw-kl7 { 
            display: flex;
        } 

        .tw-justify-d42 { 
            justify-content: center;
        } 

        .col-ah7 { 
            flex-direction: column;
        } 

        .tw-border-qeh { 
            border-width: 0;
        } 

        .tw-border-hn4 { 
            border-bottom-width: 1px;
        } 

        .tw-border-444 { 
            border-style: solid;
        } 

        .tw-border-gray-4qf { 
            --tw-border-opacity: 1; 
            border-color: #eff2f5;
        } 

        .tw-border-gray-4qf { 
            border-color: rgb(239 242 245/var(--tw-border-opacity,1));
        } 

        .tw-pb-x4b { 
            padding-bottom: 1.25rem;
        } 

        a { 
            text-decoration: inherit;
        } 

        [role='button'] { 
            cursor: pointer;
        } 

        .tw-inline-bew { 
            display: inline-flex;
        } 

        .select-kwz { 
            -webkit-user-select: none; 
            -moz-user-select: none; 
            user-select: none;
        } 

        .item-jva { 
            align-items: center;
        } 

        .tw-rounded-voz { 
            border-radius: .5rem;
        } 

        .tw-bg-gray-3i1 { 
            --tw-bg-opacity: 1; 
            background-color: #eff2f5;
        } 

        .tw-bg-gray-3i1 { 
            background-color: rgb(239 242 245/var(--tw-bg-opacity,1));
        } 

        .tw-px-rtd\.5 { 
            padding-left: .625rem; 
            padding-right: .625rem;
        } 

        .tw-py-1\.5 { 
            padding-bottom: 1.5rem; 
            padding-top: 1.5rem;
        } 

        .tw-font-gg7 { 
            font-weight: 600;
        } 

        .hovertw-bg-gray-o6g:hover { 
            --tw-bg-opacity: 1; 
            background-color: #cbd5e1;
        } 

        .hovertw-bg-gray-o6g:hover { 
            background-color: rgb(203 213 225/var(--tw-bg-opacity,1));
        } 

        .col-pf5 { 
            grid-column: span 7/span 7;
        } 

        .tw-flex-2vy { 
            flex: 1 1;
        } 

        .text-k6w { 
            font-size: .875rem; 
            line-height: 1.25rem;
        } 

        .tw-leading-bt3 { 
            line-height: 1.25rem;
        } 

        .text-vml:hover { 
            --tw-text-opacity: 1; 
            color: #0f172a;
        } 

        .text-vml:hover { 
            color: rgb(15 23 42/var(--tw-text-opacity,1));
        } 

        img { 
            border-style: solid;
        } 

        img { 
            height: auto; 
            max-width: 100%;
        } 

        .tw-aspect-\[21\/11\] { 
            aspect-ratio: 21/11;
        } 

        .tw-object-4k4 { 
            -o-object-fit: cover; 
            object-fit: cover;
        } 

        .tw-mb-ezz { 
            margin-bottom: .25rem;
        } 

        .tw-my-y4c { 
            margin-bottom: .25rem; 
            margin-top: .25rem;
        } 

        .text-yye { 
            --tw-text-opacity: 1; 
            color: #334155;
        } 

        .text-yye { 
            color: rgb(51 65 85/var(--tw-text-opacity,1));
        } 

        .tw-font-vvo { 
            font-weight: 400;
        } 

        .text-o3w { 
            --tw-text-opacity: 1; 
            color: #64748b;
        } 

        .text-o3w { 
            color: rgb(100 116 139/var(--tw-text-opacity,1));
        } 

        .text-dic { 
            font-size: 1.125rem; 
            line-height: 1.75rem;
        } 

        .tw-leading-cv8 { 
            line-height: 1.75rem;
        } 

        @media (min-width: 768px){ 
        .text-qx8 { 
            font-size: 1.25rem; 
            line-height: 1.75rem;
        } 
        }     

        .tw-min-h-2jh { 
            min-height: 1.75rem;
        } 

        .tw-cursor-ycs { 
            cursor: pointer;
        } 

        button { 
            font-family: inherit; 
            font-size: 100%; 
            line-height: 1.15; 
            margin: 0;
        } 

        button { 
            text-transform: none;
        } 

        button { 
            background-image: none;
        } 

        button { 
            cursor: pointer;
        } 

        button { 
            line-height: inherit;
        } 

        [type='button'],button { 
            -webkit-appearance: button;
            appearance: button;
        } 

        .tw-mr-8w8 { 
            margin-right: .5rem;
        } 

        .tw-z-\[2000\] { 
            z-index: 2000;
        } 

        .text-5dy { 
            font-size: .75rem; 
            line-height: 1rem;
        } 

        .tw-leading-q61 { 
            line-height: 1rem;
        } 

        .tw-mt-azx { 
            margin-top: .5rem;
        } 

        .tw-w-h8e { 
            width: 14rem;
        } 

        .tw-origin-top-6fs { 
            transform-origin: top left;
        } 

        .tw-rounded-3o3 { 
            border-radius: .375rem;
        } 

        .tw-bg-ol1 { 
            --tw-bg-opacity: 1; 
            background-color: #fff;
        } 

        .tw-bg-ol1 { 
            background-color: rgb(255 255 255/var(--tw-bg-opacity,1));
        } 

        .tw-p-j5r { 
            padding: .5rem;
        } 

        .tw-shadow-xnm { 
            --tw-shadow: 0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1); 
            --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color); 
            box-shadow: 0 0 #0000,0 0 #0000,0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1); 
            box-shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);
        } 

        .tw-ring-ncj { 
            --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); 
            --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color); 
            box-shadow: 0 0 0 2px #fff,/*!*/ /*!*/ 0 0 0 4px #2563eb,0 0 #0000; 
            box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);
        } 

        .tw-ring-gray-3dv { 
            --tw-ring-opacity: 1; 
            --tw-ring-color: rgb(239 242 245/var(--tw-ring-opacity,1));
        } 

        .tw-ml-cqn { 
            margin-left: .5rem;
        } 

        .form-q75 { 
            transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
        } 

        .fa-lof { 
            -moz-osx-font-smoothing: grayscale; 
            -webkit-font-smoothing: antialiased; 
            display: var(--fa-display, inline-block); 
            font-style: normal; 
            font-variant: normal; 
            line-height: 1; 
            text-rendering: auto;
        } 

        .fa-lof { 
            font-family: 'Font Awesome 6 Pro';
        } 

        .fa-29l { 
            --fa: '\f078'; 
        } 

        .fa-lof { 
            font-weight: 900;
        } 

        .fa-lof:before,.fass:before,.far:before,.fasr:before,.fal:before,.fasl:before,.fat:before,.fast:before,.fad:before,.fadr:before,.fadl:before,.fadt:before,.fasds:before,.fasdr:before,.fasdl:before,.fasdt:before,.fab:before,.fa-solid:before,.fa-regular:before,.fa-light:before,.fa-thin:before,.fa-brands:before,.fa-classic:before,.fa-duotone:before,.fa-sharp:before,.fa-sharp-duotone:before,.fa:before { 
            content: var(--fa);
        } 

        .tw-mr-1r8 { 
            margin-right: .25rem;
        } 

        .tw-self-efy { 
            align-self: center;
        } 

        .gecko-ory { 
            --tw-text-opacity: 1; 
            color: #00a83e;
        } 

        .gecko-ory { 
            color: rgb(0 168 62/var(--tw-text-opacity,1));
        } 

        span[data-percent-change-target='percent'] { 
            transition-duration: .15s; 
            transition-property: color,background-color,border-color,text-decoration-color,fill,stroke; 
            transition-timing-function: cubic-bezier(.4,0,.2,1);
        } 

        span[data-percent-change-target='percent'] { 
            white-space: nowrap;
        } 

        .tw-max-h-qws { 
            max-height: 24rem;
        } 

        .tw-overflow-y-ts5 { 
            overflow-y: auto;
        } 

        .fa-wfe { 
            text-align: center; 
            width: 1.25em;
        } 

        .fa-lcy { 
            --fa: '\f0d8'; 
        } 

        .tw-px-rtd { 
            padding-left: .5rem; 
            padding-right: .5rem;
        } 

        .tw-py-qdd { 
            padding-bottom: .75rem; 
            padding-top: .75rem;
        } 

        .hovertw-bg-gray-xro:hover { 
            --tw-bg-opacity: 1; 
            background-color: #f1f5f9;
        } 

        .hovertw-bg-gray-xro:hover { 
            background-color: rgb(241 245 249/var(--tw-bg-opacity,1));
        } 


        /* These were inline style tags. Uses id+class to override almost everything */
        #style-HEXbc.style-HEXbc {  
        text-decoration: none !important;  
        }  
        #style-HWcAT.style-HWcAT {  
        text-decoration: none !important;  
        }  
        #style-4NZnl.style-4NZnl {  
        text-decoration: none !important;  
        }  
        #style-jHqbS.style-jHqbS {  
        text-decoration: none !important;  
        }  
        #style-H3Nyv.style-H3Nyv {  
        position: absolute;  
            inset: 0px auto auto 0px;  
            margin: 0px;  
            transform: translate3d(1210.4px, 8022.4px, 0px);  
        }  
        #style-4Pa4P.style-4Pa4P {  
            display: none;  
        }  
        /* These were inline style tags. Uses id+class to override almost everything */
        #style-6l9qf.style-6l9qf {  
        text-decoration: none !important;  
        }  
        #style-mFEYg.style-mFEYg {  
        text-decoration: none !important;  
        }  
        #style-SjoPm.style-SjoPm {  
        text-decoration: none !important;  
        }  
        #style-wxBvV.style-wxBvV {  
        text-decoration: none !important;  
        }  
        #style-oSJxy.style-oSJxy {  
        position: absolute;  
            inset: 0px auto auto 0px;  
            margin: 0px;  
            transform: translate3d(1210.4px, 8022.4px, 0px);  
        }  
        #style-To6Rk.style-To6Rk {  
            display: none;  
        }
      </style>
   </head>
   <body>
        <div class='tw-mt-wf8 mdtw-mt-76x tw-w-fxg' style='padding-right: 1rem !important;'>
            <h2 class='tw-mb-act tw-font-ng7 text-dby text-bfo text-54g tw-leading-do4'> Latest Crypto News </h2>
            <div class='grid-6z2 grid-aoz tw-gap-qsq tw-mb-act'>
                " & Cards & "
            </div>
        </div>
   </body>
</html>"
MEASURE [News Sentiment Gauge] = 
VAR Score = 
    CALCULATE(
        AVERAGE('News Data'[Sentiment Score]),
        REMOVEFILTERS('News Data'),
        FILTER('News Data', 'News Data'[coin] = SELECTEDVALUE('News Data'[coin]))
    )

-- Calculate the ScaledScore directly
VAR ScaledScore = 
    SWITCH(TRUE(),
        Score >= 0, (Score) * 100,    -- Scale directly from the Score
        Score < 0, 0                  -- Default to 0 if negative score
    )

-- Coin name for the label
VAR CoinName = SELECTEDVALUE('News Data'[coin])

-- Define the label based on ScaledScore
VAR Label =
    SWITCH(TRUE(),
        ScaledScore >= 80, "📰 Recent news indicates that " & CoinName & " is receiving very positive coverage and public enthusiasm! 🚀",
        ScaledScore >= 60, "📰 News articles show a generally positive outlook toward " & CoinName & ". 👍",
        ScaledScore >= 40, "📰 The news coverage around " & CoinName & " appears balanced or neutral. 🤝",
        ScaledScore >= 20, "📰 Current news suggests some negative sentiment toward " & CoinName & ". ⚠️",
        "📰 News media is portraying " & CoinName & " in a very negative light. 🚨"
    )

-- Define the emoji based on ScaledScore
VAR Emoji =
    SWITCH(TRUE(),
        ScaledScore >= 80, "😊",
        ScaledScore >= 60, "🙂",
        ScaledScore >= 40, "😐",
        ScaledScore >= 20, "😕",
        "😞"
    )

-- Calculate angle for the gauge indicator
VAR Angle = PI() * ScaledScore / 100
VAR X = 100 - 80 * COS(Angle)
VAR Y = 80 - 80 * SIN(Angle)

-- Return the HTML output with the calculated sentiment values
RETURN
"<!DOCTYPE html>
<html>
    <head>
        <style>
            * { margin: 0; padding: 0; box-sizing: border-box; }
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                background-color: #ffffff;
                display: flex;
                justify-content: center;
                align-items: center;
                min-height: 100vh;
                padding: 20px;
            }
            .sentiment-gauge-container {
                background: #ffffff;
                border-radius: 8px;
                padding: 10px;
                text-align: center;
                max-width: 450px;
                width: 100%;
            }
            .title-container {
                display: flex;
                justify-content: center;
                margin-bottom: 10px;
            }
            .gauge-title {
                font-size: 14px;
                font-weight: bold;
                color: #0f0f0f;
                background-color: #E6E6E6;
                padding: 6px 12px;
                border-radius: 12px;
                text-transform: uppercase;
                letter-spacing: 0.5px;
                text-align: center;
                display: inline-block;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            }
            .gauge-wrapper {
                position: relative;
                width: 200px;
                height: 100px;
                margin: 0 auto 15px;
            }
            .gauge-svg {
                width: 100%;
                height: 150%;
                overflow: visible;
            }
            .gauge-background {
                stroke: #e6e6e6;
                stroke-width: 12;
                fill: none;
                stroke-linecap: round;
            }
            .gauge-fill {
                stroke-width: 12;
                fill: none;
                stroke-linecap: round;
                transition: stroke-dashoffset 0.8s ease-out;
            }
            .gauge-indicator {
                fill: #666666;
                transition: transform 0.8s ease-out;
            }
            .gauge-center {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -30%);
                display: flex;
                flex-direction: column;
                align-items: center;
            }
            .emoji-icon {
                font-size: 30px;
                margin-bottom: -50px;
            }
            .sentiment-label {
                font-size: 16px;
                font-weight: 600;
                color: #333333;
                margin-top: 10px;
                text-align: center;
            }
            .sentiment-score {
                font-size: 14px;
                font-weight: bold;
                color: #666666;
                margin-top: 5px;
                text-align: center;
            }
            @media (max-width: 480px) {
                .gauge-wrapper { width: 160px; height: 80px; }
                .emoji-icon { font-size: 30px; margin-bottom: -50px; }
                .sentiment-label { font-size: 14px; }
            }
        </style>
    </head>
    <body>
        <div class='sentiment-gauge-container'>
            <div class='title-container'>
                <div class='gauge-title'>🗞️ Media Buzz from News</div>
            </div>
            <div class='gauge-wrapper'>
                <svg class='gauge-svg' viewBox='0 0 200 100'>
                    <defs>
                        <linearGradient id='sentimentGradient' x1='0%' y1='0%' x2='100%' y2='0%'>
                            <stop offset='0%' stop-color='#F56565'/>
                            <stop offset='25%' stop-color='#ED8936'/>
                            <stop offset='50%' stop-color='#FFD700'/>
                            <stop offset='75%' stop-color='#6EE7B7'/>
                            <stop offset='100%' stop-color='#32CD32'/>
                        </linearGradient>
                    </defs>
                    <path class='gauge-background' d='M 20 80 A 80 80 0 0 1 180 80'/>
                    <path class='gauge-fill' d='M 20 80 A 80 80 0 0 1 180 80'
                        stroke='url(#sentimentGradient)'
                        stroke-dasharray='251.33'
                        stroke-dashoffset='" & FORMAT(251.33 - (251.33 * ScaledScore / 100), "0.0") & "'/>
                    <circle class='gauge-indicator'
                        cx='" & FORMAT(X, "0.0") & "'
                        cy='" & FORMAT(Y, "0.0") & "'
                        r='6'/>
                </svg>
                <div class='gauge-center'>
                    <div class='emoji-icon'>" & Emoji & "</div>
                </div>
            </div>
            <div class='sentiment-label'>" & Label & "</div>
            <div class='sentiment-score'>Score: " & FORMAT(Score, "0.00") & "</div>
        </div>
    </body>
</html>"

MEASURE [News_Trend] = 
VAR Down = "↓"
VAR Up = "↑"
VAR Trend_Value = VALUE(SELECTEDVALUE('News Data'[Price Change %]))
VAR Rounded_Value = ROUND(Trend_Value, 2)
RETURN
    SWITCH(
        TRUE(),
        ISBLANK(Trend_Value), BLANK(),
        Trend_Value < 0, Down & " " & ABS(Rounded_Value) & "%",
        " "& Up & " " & Rounded_Value & "%"
    )

MEASURE [News_Trend_Color] = 
VAR Change = VALUE(SELECTEDVALUE('News Data'[Price Change %]))
RETURN
SWITCH(
    TRUE(),
    ISBLANK(Change), "#000000",        -- Black for blank
    Change < 0, "#db2c2c",             -- Red
    Change > 0, "#00a83e",             -- Green
    "#000000"                          -- Fallback
)

MEASURE [Portfolio Clean Ring Visual] = 
VAR TotalInvestment = 
    SUMX (
        'User Portfolio Based Crypto Data',
        'User Portfolio Based Crypto Data'[Price on Puchase Date]
    )

VAR TotalProfitLoss = 
    SUMX (
        'User Portfolio Based Crypto Data',
        'User Portfolio Based Crypto Data'[Current Price] - 
        'User Portfolio Based Crypto Data'[Price on Puchase Date]
    )

VAR ProfitPercent = DIVIDE ( TotalProfitLoss, TotalInvestment, 0 ) * 100
VAR ClampedPct = MIN(100, MAX(-100, ProfitPercent))

VAR Color = 
    SWITCH (
        TRUE(),
        ProfitPercent >= 50, "#00C853",
        ProfitPercent >= 10, "#64DD17",
        ProfitPercent > 0, "#AEEA00",
        ProfitPercent = 0, "#CFD8DC",
        ProfitPercent > -10, "#FFB74D",
        ProfitPercent > -30, "#FF5722",
        TRUE(), "#D50000"
    )

RETURN
"
<svg viewBox='0 0 200 240' width='100%' height='100%' style='font-family:Segoe UI, sans-serif;'>

  <!-- Background Ring -->
  <circle
    cx='100' cy='100' r='90'
    fill='none'
    stroke='#ECEFF1'
    stroke-width='16'
  />

  <!-- Foreground Ring (Dynamic Fill) -->
  <circle
    cx='100' cy='100' r='90'
    fill='none'
    stroke='" & Color & "'
    stroke-width='16'
    stroke-dasharray='" & FORMAT(ABS(ClampedPct), "0.0") & ", 100'
    stroke-linecap='round'
    transform='rotate(-90 100 100)'
  />

  <!-- Percent in Center -->
  <text x='100' y='108' font-size='28' text-anchor='middle' fill='#333' font-weight='600'>
    " & FORMAT(ProfitPercent, "0.0") & "%
  </text>

  <!-- Invested -->
  <text x='100' y='150' font-size='13' text-anchor='middle' fill='#555'>
    Invested: $" & FORMAT(TotalInvestment, "#,##0.00") & "
  </text>

  <!-- P/L -->
  <text x='100' y='168' font-size='13' text-anchor='middle' fill='" & Color & "' font-weight='600'>
    P/L: $" & FORMAT(TotalProfitLoss, "#,##0.00") & "
  </text>

</svg>
"

MEASURE [Portfolio Status_Color] = 
VAR TotalChange =
    SUMX(
        'User Portfolio Based Crypto Data',
        ('User Portfolio Based Crypto Data'[Current Price] - 'User Portfolio Based Crypto Data'[Price on Puchase Date])
        * 1  // Optional: include only if quantity is relevant
    )
RETURN
    IF(
        ISBLANK(TotalChange),
        "#808080",         // Gray for no data
        IF(TotalChange >= 0, "#008000", "#FF0000")  // Green for profit, Red for loss
    )

MEASURE [Positive Mentions Card] = 
VAR pos = SELECTEDVALUE('User Portfolio Based Crypto Data'[Positive Mentions])
VAR pct = SELECTEDVALUE('User Portfolio Based Crypto Data'[Positive %])

RETURN
"
<div style='font-family:Segoe UI, sans-serif; background-color:transparent;'>
  
  <div style='font-size:16px; text-aling:center'>Positive Mentions</div>
  
  <div style='font-size:30px; font-weight:600; margin-top:6px; color:#2ecc71;'>
    " & FORMAT(pos, "#,##0") & "
  </div>
  
  <div style='font-size:12px; color:#555; margin-top:6px;'>
    " & FORMAT(pct, "0.0%") & " of total mentions
  </div>
</div>"
MEASURE [Power App Msg] = 
"
<!DOCTYPE html>
<html>
    <head>
    </head>
    <body>
        <div style='font-family: Segoe UI, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; color: #333;'>
        
        <h2 style='text-align: center; color: #1E88E5;'>🪙 Track Your Crypto Assets Smarter</h2>

        <p style='font-size: 16px; line-height: 1.6;'>
            BlockMind helps you manage and analyze your crypto investments with <strong>real-time market data</strong>, 
            <strong>news sentiment</strong>, and <strong>historical performance</strong> – all in one secure dashboard.
        </p>
        </div>
    </body>
</html>
"

MEASURE [Price Change % Panel] = 
VAR H1 = [1H Price Change %]
VAR H24 = [24Hr Price Change %]
VAR D7 = [7D Price Change %]
VAR D14 = [14D Price Change %]
VAR D30 = [30D Price Change %]
VAR Y1 = [1Y Price Change %]

RETURN
"
<!DOCTYPE html>
<html>
   <head>
    <style>
        @import url('https://fonts.googleapis.com/css?family=Inter:100,200,300,400,500,600,700,800,900&display=swap'); 
        @font-face { 
        font-family:'Font Awesome 6 Pro';
        font-style:normal;
        font-weight:400;
        font-display:block;
        src:url(./fonts/fa-regular-400-c50debec0910940c4b721ab00608224686660766a7b7e2679486da3d195a084d.woff2) format('woff2'),url(./fonts/fa-regular-400-18f225ab24ea145c7f6cb8d1551d8c69810cd84efd9a471349a8dcabc8d5ae1c.ttf) format('truetype');
        } 
        @font-face { 
        font-family:'Font Awesome 6 Pro';
        font-style:normal;
        font-weight:900;
        font-display:block;
        src:url(./fonts/fa-solid-900-7e30fe6941a2083f005e1c0cd7cbb44cdc101623a6a6ce8293bc9102f092e595.woff2) format('woff2'),url(./fonts/fa-solid-900-03c73c5087b42a718fe230c724e36efb37864caa464f7264e92290a973a7de9e.ttf) format('truetype');
        } 
        body {  
            font-family:Inter,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;
            font-size:13px;
            line-height:1.425;
        }  
        body { 
        /* CSS Variables that may have been missed get put on body */ 
            --tw-border-opacity:  1;  
            --tw-bg-opacity:  1;  
            --tw-text-opacity:  1;  
            --tw-divide-x-reverse:  0;  
            --tw-divide-opacity:  1;  
            --tw-text-opacity:  1;  
            --tw-text-opacity:  1;  
            --fa:  '\f0d8';  
            --fa:  '\f0d7';  
        } 

        * { 
            border: 0 solid #e5e7eb; 
            box-sizing: border-box;
        } 

        @media (min-width: 1200px){ 
        .\32 lg\:tw-col-span-2 { 
            grid-column: span 2/span 2;
        } 

        .\32 lg\:tw-col-start-2 { 
            grid-column-start: 2;
        } 

        .\32 lg\:tw-row-span-2 { 
            grid-row: span 2/span 2;
        } 

        .\32 lg\:tw-row-start-2 { 
            grid-row-start: 2;
        } 

        .\32 lg\:tw-pl-6 { 
            padding-left: 1.5rem;
        } 

        .\32 lg\:tw-grid-cols-3 { 
            grid-template-columns: repeat(3,minmax(0,1fr));
        } 
        }     

        body { 
            display: flex; 
            flex-direction: column; 
            font-family: Inter,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol; 
            font-size: 13px; 
            line-height: 1.425; 
            margin: 0;
        } 

        html { 
            min-height: 100%; 
            position: relative;
        } 

        :root { 
            -moz-tab-size: 4; 
            -o-tab-size: 4; 
            tab-size: 4;
        } 

        .tw-rounded-dpz { 
            border-radius: .75rem;
        } 

        .tw-aj1 { 
            border-width: 1px;
        } 

        .tw-border-gray-gis { 
            --tw-border-opacity: 1; 
            border-color: #eff2f5;
        } 

        .tw-border-gray-gis { 
            border-color: rgb(239 242 245/var(--tw-border-opacity,1));
        } 

        *,:after,:before { 
            border: 0 solid #e5e7eb; 
            box-sizing: border-box;
        } 

        table { 
            border-color: inherit; 
            text-indent: 0;
        } 

        table { 
            border-collapse: collapse;
        } 

        .tw-w-tmc { 
            width: 100%;
        } 

        .tw-overflow-ciz { 
            overflow: hidden;
        } 

        .tw-min-w-o9o { 
            min-width: 100%;
        } 

        .tw-whitespace-oha { 
            white-space: nowrap;
        } 

        .tw-border-r55 { 
            border-bottom-width: 1px;
        } 

        .tw-bg-gray-a4q { 
            --tw-bg-opacity: 1; 
            background-color: #f1f5f9;
        } 

        .tw-bg-gray-a4q { 
            background-color: rgb(241 245 249/var(--tw-bg-opacity,1));
        } 

        .tw-px-pkn { 
            padding-left: .25rem; 
            padding-right: .25rem;
        } 

        .tw-py-k4q { 
            padding-bottom: .75rem; 
            padding-top: .75rem;
        } 

        .text-mgh { 
            text-align: center;
        } 

        .text-6ap { 
            font-size: .75rem; 
            line-height: 1rem;
        } 

        .tw-font-2ix { 
            font-weight: 600;
        } 

        .text-3tt { 
            --tw-text-opacity: 1; 
            color: #0f172a;
        } 

        .text-3tt { 
            color: rgb(15 23 42/var(--tw-text-opacity,1));
        } 

        @media (min-width: 1200px){ 
        .\32 lg\:tw-pl-2\.5  { 
            padding-left: .625rem;
        } 
        }     

        .tw-divide-x-\[1px\] > :not([hidden]) ~ :not([hidden])  { 
            --tw-divide-x-reverse: 0; 
            border-left-width: 1px; 
            border-left-width: calc(1px*(1 - var(--tw-divide-x-reverse))); 
            border-right-width: 0; 
            border-right-width: calc(1px*var(--tw-divide-x-reverse));
        } 

        .tw-divide-gray-6w6 > :not([hidden]) ~ :not([hidden])  { 
            --tw-divide-opacity: 1; 
            border-color: #eff2f5;
        } 

        .tw-divide-gray-6w6 > :not([hidden]) ~ :not([hidden])  { 
            border-color: rgb(239 242 245/var(--tw-divide-opacity,1));
        } 

        .tw-bg-rle { 
            background-color: inherit;
        } 

        .tw-py-2\.5 { 
            padding-bottom: .625rem; 
            padding-top: .625rem;
        } 

        @media (min-width: 1200px){ 
        .\32 lg\:tw-p-2\.5  { 
            padding: .625rem;
        } 
        }     

        .gecko-8o4 { 
            --tw-text-opacity: 1; 
        } 

        span[data-percent-change-target='percent'] { 
            transition-duration: .15s; 
            transition-property: color,background-color,border-color,text-decoration-color,fill,stroke; 
            transition-timing-function: cubic-bezier(.4,0,.2,1);
        } 

        span[data-percent-change-target='percent'] { 
            white-space: nowrap;
        } 

        .fa-l35 { 
            -moz-osx-font-smoothing: grayscale; 
            -webkit-font-smoothing: antialiased; 
            display: var(--fa-display, inline-block); 
            font-style: normal; 
            font-variant: normal; 
            line-height: 1; 
            text-rendering: auto;
        } 

        .fa-l35 { 
            font-family: 'Font Awesome 6 Pro';
        } 

        .fa-qsl { 
            text-align: center; 
            width: 1.25em;
        } 

        .fa-zqh { 
            --fa: '\f0d8'; 
        } 

        .fa-l35 { 
            font-weight: 900;
        } 

        .fa-l35:before,.fass:before,.far:before,.fasr:before,.fal:before,.fasl:before,.fat:before,.fast:before,.fad:before,.fadr:before,.fadl:before,.fadt:before,.fasds:before,.fasdr:before,.fasdl:before,.fasdt:before,.fab:before,.fa-solid:before,.fa-regular:before,.fa-light:before,.fa-thin:before,.fa-brands:before,.fa-classic:before,.fa-duotone:before,.fa-sharp:before,.fa-sharp-duotone:before,.fa:before { 
            content: var(--fa);
        } 

        .fa-olp { 
            --fa: '\f0d7'; 
        }
    </style>
   </head>
   <body>
<div class='tw-aj1 tw-border-gray-gis tw-rounded-dpz'>
    <table class='tw-overflow-ciz tw-w-tmc tw-rounded-dpz'>
        <thead>
            <tr class='tw-divide-gray-6w6'>
                <th class='tw-py-k4q tw-px-pkn tw-font-2ix text-6ap text-3tt tw-whitespace-oha text-mgh tw-bg-gray-a4q tw-border-r55 tw-border-gray-gis'> 1h </th>
                <th class='tw-py-k4q tw-px-pkn tw-font-2ix text-6ap text-3tt tw-whitespace-oha text-mgh tw-bg-gray-a4q tw-border-r55 tw-border-gray-gis'> 24h </th>
                <th class='tw-py-k4q tw-px-pkn tw-font-2ix text-6ap text-3tt tw-whitespace-oha text-mgh tw-bg-gray-a4q tw-border-r55 tw-border-gray-gis'> 7d </th>
                <th class='tw-py-k4q tw-px-pkn tw-font-2ix text-6ap text-3tt tw-whitespace-oha text-mgh tw-bg-gray-a4q tw-border-r55 tw-border-gray-gis'> 14d </th>
                <th class='tw-py-k4q tw-px-pkn tw-font-2ix text-6ap text-3tt tw-whitespace-oha text-mgh tw-bg-gray-a4q tw-border-r55 tw-border-gray-gis'> 30d </th>
                <th class='tw-py-k4q tw-px-pkn tw-font-2ix text-6ap text-3tt tw-whitespace-oha text-mgh tw-bg-gray-a4q tw-border-r55 tw-border-gray-gis'> 1y </th>
            </tr>
        </thead>
        <tbody class='tw-divide-gray-6w6 tw-min-w-o9o'>
            <tr class='tw-divide-gray-6w6'>
                <td class='text-mgh tw-px-pkn tw-bg-rle text-3tt'>
                    <span class='gecko-8o4' data-percent-change-target='percent' style='color:"&IF(H1 < 0,"#ff3a33","#00a83e")&"';>" & FORMAT(H1 * 100, "0.00") & "%" & "</span>
                </td>
                <td class='text-mgh tw-px-pkn tw-bg-rle text-3tt'>
                    <span class='gecko-8o4' data-percent-change-target='percent' style='color:"&IF(H24 < 0,"#ff3a33","#00a83e")&"';>" & FORMAT(H24 * 100, "0.00") & "%" & "</span>
                </td>
                <td class='text-mgh tw-px-pkn tw-bg-rle text-3tt'>
                    <span class='gecko-8o4' data-percent-change-target='percent' style='color:"&IF(D7 < 0,"#ff3a33","#00a83e")&"';>" & FORMAT(D7 * 100, "0.00") & "%" & "</span>
                </td>
                <td class='text-mgh tw-px-pkn tw-bg-rle text-3tt'>
                    <span class='gecko-8o4' data-percent-change-target='percent' style='color:"&IF(D14 < 0,"#ff3a33","#00a83e")&"';>" & FORMAT(D14 * 100, "0.00") & "%" & "</span>
                </td>
                <td class='text-mgh tw-px-pkn tw-bg-rle text-3tt'>
                    <span class='gecko-8o4' data-percent-change-target='percent' style='color:"&IF(D30 < 0,"#ff3a33","#00a83e")&"';>" & FORMAT(D30 * 100, "0.00") & "%" & "</span>
                </td>
                <td class='text-mgh tw-px-pkn tw-bg-rle text-3tt'>
                    <span class='gecko-8o4' data-percent-change-target='percent' style='color:"&IF(Y1 < 0,"#ff3a33","#00a83e")&"';>" & FORMAT(Y1 * 100, "0.00") & "%" & "</span>
                </td>
            </tr>
        </tbody>
    </table>
</div>
   </body>
</html>

"

MEASURE [Price Range Fill Percent] = 
VAR Low = SELECTEDVALUE('User Portfolio Based Crypto Data'[24h Low Price])
VAR High = SELECTEDVALUE('User Portfolio Based Crypto Data'[24h High Price])
VAR CurrentPrice = SELECTEDVALUE('User Portfolio Based Crypto Data'[Current Price])
RETURN
    IF(
        NOT ISBLANK(Low) && NOT ISBLANK(High) && High > Low,
        FORMAT(DIVIDE(CurrentPrice - Low, High - Low), "0.##%"),
        "0%"
    )
MEASURE [PriceTrend] = 
SWITCH(
    TRUE(),
    SELECTEDVALUE('Hourly Candlestick Data'[Close]) > SELECTEDVALUE('Hourly Candlestick Data'[BB_Upper]), "Overbought",
    SELECTEDVALUE('Hourly Candlestick Data'[Close]) < SELECTEDVALUE('Hourly Candlestick Data'[BB_Lower]), "Oversold",
    SELECTEDVALUE('Hourly Candlestick Data'[Close]) > SELECTEDVALUE('Hourly Candlestick Data'[SMA_20]), "Bullish",
    SELECTEDVALUE('Hourly Candlestick Data'[Close]) < SELECTEDVALUE('Hourly Candlestick Data'[Close]), "Bearish",
    "Neutral"
)

MEASURE [Profit] = 
VAR Buy = SELECTEDVALUE('User Portfolio Based Crypto Data'[Price on Puchase Date])
VAR CurrentPrice = SELECTEDVALUE('User Portfolio Based Crypto Data'[Current Price])
VAR Change = CurrentPrice - Buy
RETURN
    IF(Change > 0, Change, 0)

MEASURE [Profit/Loss] = 
VAR Buy = SELECTEDVALUE('User Portfolio Based Crypto Data'[Price on Puchase Date])
VAR CurrentPrice = SELECTEDVALUE('User Portfolio Based Crypto Data'[Current Price])
VAR Change = CurrentPrice - Buy
RETURN
    IF(
        ISBLANK(Buy) || ISBLANK(CurrentPrice),
        "$0.00",
        "$" & ABS(Change)
    )
MEASURE [Profit/Loss Label] = 
VAR Buy = SELECTEDVALUE('User Portfolio Based Crypto Data'[Price on Puchase Date])
VAR CurrentPrice = SELECTEDVALUE('User Portfolio Based Crypto Data'[Current Price])
VAR Change = CurrentPrice - Buy
RETURN
    SWITCH(
        TRUE(),
        ISBLANK(Buy) || ISBLANK(CurrentPrice), "No data available",
        Change > 0, "Profit per coin",
        Change < 0, "Loss per coin",
        "No profit or loss"
    )

MEASURE [Reddit Community Posts] = 
VAR Cards =
    CONCATENATEX (
        'Reddit Community Data',
        "
            <div class='flex items-start gap-2 mb-2'>
                <div class='w-8 h-8 rounded-full bg-reddit-orange flex items-center justify-center flex-shrink-0 overflow-hidden mt-0.5'>
                    <img src='"& 
                     IF(
                        'Reddit Community Data'[Subreddit] = "CryptoCurrency",
                        "https://styles.redditmedia.com/t5_2wlj3/styles/communityIcon_v91xfztvxg7e1.png?width=128&frame=1&auto=webp&s=207ee779eb41568da55230fc997c2c7afae8956e",
                        "https://b.thumbs.redditmedia.com/JU-wLC9f1XJIRWiHlHls5GDMUcickAvpsS_NkyleyVc.png"  -- Or a fallback column value
                    )
        &"' alt='r/CryptoCurrency community icon' class='w-full h-full object-cover rounded-full' />
                </div>
                <div class='flex-1 min-w-0'>
                    <div class='flex items-center gap-1 text-sm text-text-secondary mb-1'>
                        <span class='font-medium text-text-primary'>r/"&'Reddit Community Data'[Subreddit]&"</span>
                        <span>•</span>
                        <time datetime='2025-07-11T17:36:59' class='hover:underline cursor-pointer'>"&'Reddit Community Data'[Posted At (UTC)]&"</time>
                    </div>
                    <div class='mb-4'>
                        <span class='text-sm font-medium text-text-primary hover:underline cursor-pointer'>"&'Reddit Community Data'[Author]&"</span>
                    </div>
                </div>
            </div>
            <div class='tw-border-qeh tw-border-hn4 tw-border-444 tw-border-gray-4qf tw-pb-x4b tw-kl7 col-ah7'>
                <div class='tw-kl7 col-ah7 tw-flex-2vy col-pf5'>
                    <a class='tw-flex-2vy style-mFEYg' href='"&'Reddit Community Data'[Post URL]&"' id='style-mFEYg'>
                        <div class='tw-mb-act tw-font-ng7 text-dby text-dic text-qx8 tw-leading-cv8'>"&'Reddit Community Data'[Title]&"</div>
                    </a>
                    <div class='flex items-center gap-4 text-sm'>
                        <div class='flex items-center bg-surface rounded px-3 py-1.5 text-text-secondary'>
                            <span class='font-medium'>UpVotes: "&'Reddit Community Data'[Upvotes]&"</span>
                        </div>
                        <div class='flex items-center bg-surface rounded px-3 py-1.5 text-text-secondary'>
                            <span class='font-medium'>Comments: "&'Reddit Community Data'[Comments]&"</span>
                        </div>
                        <div class='flex items-center bg-surface rounded px-3 py-1.5 text-text-secondary'>
                            <span class='font-medium'>Sentiment Score: "&ROUND('Reddit Community Data'[Sentiment Score],2)&"</span>
                        </div>
                    </div>
                </div>
            </div>
        ",
        "",
        'Reddit Community Data'[Posted At (UTC)]
    )

RETURN
"
<!DOCTYPE html>
<html>
    <head>
        <style>
            @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap');
            @import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400&display=swap');
            @import url('https://fonts.googleapis.com/css?family=Inter:100,200,300,400,500,600,700,800,900&display=swap'); 
            .mx-auto{ margin-left: auto; margin-right: auto; }
            .mb-1{ margin-bottom: 0.15rem; }
            .mb-2{ margin-bottom: 0.25rem; }
            .mb-4{ margin-bottom: 0.25rem; }
            .mt-0\.5{ margin-top: 0.125rem; }
            .flex{ display: flex; }
            .h-8{ height: 2rem; }
            .h-full{ height: 100%; }
            .w-8{ width: 2rem; }
            .w-full{ width: 100%; }
            .min-w-0{ min-width: 0px; }
            .max-w-2xl{ max-width: 42rem; }
            .max-w-4xl{ max-width: 56rem; }
            .flex-1{ flex: 1 1 0%; }
            .flex-shrink-0{ flex-shrink: 0; }
            .transform{ transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }
            .cursor-pointer{ cursor: pointer; }
            .items-start{ align-items: flex-start; }
            .items-center{ align-items: center; }
            .justify-center{ justify-content: center; }
            .gap-1{ gap: 0.25rem; }
            .gap-2{ gap: 0.5rem; } 
            .gap-4{ gap: 1rem; }
            .overflow-hidden{ overflow: hidden; }
            .rounded{ border-radius: 0.25rem; }
            .rounded-full{ border-radius: 9999px; }
            .rounded-lg{ border-radius: 0.5rem; }
            .border{ border-width: 1px; }
            .border-reddit-border{ --tw-border-opacity: 1; border-color: rgb(224 224 224 / var(--tw-border-opacity, 1)); }
            .bg-reddit-orange{ --tw-bg-opacity: 1; background-color: rgb(255 69 0 / var(--tw-bg-opacity, 1)); }
            .bg-surface{ --tw-bg-opacity: 1; background-color: rgb(248 249 250 / var(--tw-bg-opacity, 1)); }
            .bg-white{ --tw-bg-opacity: 1; background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1)); }
            .object-cover{ -o-object-fit: cover; object-fit: cover; }
            .p-4{ padding: 1rem; }
            .px-3{ padding-left: 0.75rem; padding-right: 0.75rem; }
            .py-1\.5{ padding-top: 0.375rem; padding-bottom: 0.375rem; }
            .font-inter{ font-family: Inter, sans-serif; }
            .text-sm{ font-size: 0.875rem; line-height: 1.25rem; }
            .text-xl{ font-size: 1.25rem; line-height: 1.75rem; }
            .font-medium{ font-weight: 500; }
            .font-semibold{ font-weight: 600; }
            .leading-tight{ line-height: 1.25; }
            .text-text-primary{ --tw-text-opacity: 1; color: rgb(26 26 27 / var(--tw-text-opacity, 1)); }
            .text-text-secondary{ --tw-text-opacity: 1; color: rgb(124 124 131 / var(--tw-text-opacity, 1)); }
            @media (min-width: 768px){ .md\:p-8{ padding: 2rem; } .md\:text-2xl{ font-size: 1.5rem; line-height: 2rem; } }
            @font-face { font-family:'Font Awesome 6 Pro'; font-style:normal; font-weight:400; font-display:block; src:url(./fonts/fa-regular-400-c50debec0910940c4b721ab00608224686660766a7b7e2679486da3d195a084d.woff2) format('woff2'),url(./fonts/fa-regular-400-18f225ab24ea145c7f6cb8d1551d8c69810cd84efd9a471349a8dcabc8d5ae1c.ttf) format('truetype'); } 
            @font-face { font-family:'Font Awesome 6 Pro'; font-style:normal; font-weight:900; font-display:block; src:url(./fonts/fa-solid-900-7e30fe6941a2083f005e1c0cd7cbb44cdc101623a6a6ce8293bc9102f092e595.woff2) format('woff2'),url(./fonts/fa-solid-900-03c73c5087b42a718fe230c724e36efb37864caa464f7264e92290a973a7de9e.ttf) format('truetype'); } 
            body { font-family:Inter,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol; font-size:13px; line-height:1.425; }  
            * { border: 0 solid #e5e7eb; box-sizing: border-box; }
            body { display: flex; flex-direction: column; font-family: Inter,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol; font-size: 13px; line-height: 1.425; margin: 0; } 
            html { min-height: 100%; position: relative;} 
            :root { -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4; } 
            .tw-mt-wf8 { margin-top: 1rem; } 
            .tw-w-fxg { 
                width: 100%;
            } 

            @media (min-width: 768px){ 
            .mdtw-mt-76x { 
                margin-top: 2rem;
            } 
            }

            h2 { 
                margin: 0;
            } 

            .tw-mb-act { 
                margin-bottom: 1rem;
            } 

            .text-bfo { 
                font-size: 1.25rem; 
                line-height: 1.75rem;
            } 

            .tw-font-ng7 { 
                font-weight: 700;
            } 

            .tw-leading-do4 { 
                line-height: 2rem;
            } 

            .text-dby { 
                --tw-text-opacity: 1; 
                color: #0f172a;
            } 

            .text-dby { 
                color: rgb(15 23 42/var(--tw-text-opacity,1));
            } 

            @media (min-width: 768px){ 
            .text-54g { 
                font-size: 1.5rem; 
                line-height: 2rem;
            } 
            }     

            .grid-6z2 { 
                display: grid;
            } 

            .tw-gap-qsq { 
                gap: 1.25rem;
            } 

            @media (min-width: 768px){ 
            .grid-aoz { 
                grid-template-columns: repeat(4,minmax(0,1fr));
            } 
            }     

            .tw-kl7 { 
                display: flex;
            } 

            .tw-justify-d42 { 
                justify-content: center;
            } 

            .col-ah7 { 
                flex-direction: column;
            } 

            .tw-border-qeh { 
                border-width: 0;
            } 

            .tw-border-hn4 { 
                border-bottom-width: 1px;
            } 

            .tw-border-444 { 
                border-style: solid;
            } 

            .tw-border-gray-4qf { 
                --tw-border-opacity: 1; 
                border-color: #eff2f5;
            } 

            .tw-border-gray-4qf { 
                border-color: rgb(239 242 245/var(--tw-border-opacity,1));
            } 

            .tw-pb-x4b { 
                padding-bottom: 1.25rem;
            } 

            a { 
                text-decoration: inherit;
            } 

            [role='button'] { 
                cursor: pointer;
            } 

            .tw-inline-bew { 
                display: inline-flex;
            } 

            .select-kwz { 
                -webkit-user-select: none; 
                -moz-user-select: none; 
                user-select: none;
            } 

            .item-jva { 
                align-items: center;
            } 

            .tw-rounded-voz { 
                border-radius: .5rem;
            } 

            .tw-bg-gray-3i1 { 
                --tw-bg-opacity: 1; 
                background-color: #eff2f5;
            } 

            .tw-bg-gray-3i1 { 
                background-color: rgb(239 242 245/var(--tw-bg-opacity,1));
            } 

            .tw-px-rtd\.5 { 
                padding-left: .625rem; 
                padding-right: .625rem;
            } 

            .tw-py-1\.5 { 
                padding-bottom: 1.5rem; 
                padding-top: 1.5rem;
            } 

            .tw-font-gg7 { 
                font-weight: 600;
            } 

            .hovertw-bg-gray-o6g:hover { 
                --tw-bg-opacity: 1; 
                background-color: #cbd5e1;
            } 

            .hovertw-bg-gray-o6g:hover { 
                background-color: rgb(203 213 225/var(--tw-bg-opacity,1));
            } 

            .col-pf5 { 
                grid-column: span 7/span 7;
            } 

            .tw-flex-2vy { 
                flex: 1 1;
            } 

            .text-k6w { 
                font-size: .875rem; 
                line-height: 1.25rem;
            } 

            .tw-leading-bt3 { 
                line-height: 1.25rem;
            } 

            .text-vml:hover { 
                --tw-text-opacity: 1; 
                color: #0f172a;
            } 

            .text-vml:hover { 
                color: rgb(15 23 42/var(--tw-text-opacity,1));
            } 

            img { 
                border-style: solid;
            } 

            img { 
                height: auto; 
                max-width: 100%;
            } 

            .tw-aspect-\[21\/11\] { 
                aspect-ratio: 21/11;
            } 

            .tw-object-4k4 { 
                -o-object-fit: cover; 
                object-fit: cover;
            } 

            .tw-mb-ezz { 
                margin-bottom: .25rem;
            } 

            .tw-my-y4c { 
                margin-bottom: .25rem; 
                margin-top: .25rem;
            } 

            .text-yye { 
                --tw-text-opacity: 1; 
                color: #334155;
            } 

            .text-yye { 
                color: rgb(51 65 85/var(--tw-text-opacity,1));
            } 

            .tw-font-vvo { 
                font-weight: 400;
            } 

            .text-o3w { 
                --tw-text-opacity: 1; 
                color: #64748b;
            } 

            .text-o3w { 
                color: rgb(100 116 139/var(--tw-text-opacity,1));
            } 

            .text-dic { 
                font-size: 1.125rem; 
                line-height: 1.75rem;
            } 

            .tw-leading-cv8 { 
                line-height: 1.75rem;
            } 

            @media (min-width: 768px){ 
            .text-qx8 { 
                font-size: 1.25rem; 
                line-height: 1.75rem;
            } 
            }     

            .tw-min-h-2jh { 
                min-height: 1.75rem;
            } 

            .tw-cursor-ycs { 
                cursor: pointer;
            } 

            button { 
                font-family: inherit; 
                font-size: 100%; 
                line-height: 1.15; 
                margin: 0;
            } 

            button { 
                text-transform: none;
            } 

            button { 
                background-image: none;
            } 

            button { 
                cursor: pointer;
            } 

            button { 
                line-height: inherit;
            } 

            [type='button'],button { 
                -webkit-appearance: button;
                appearance: button;
            } 

            .tw-mr-8w8 { 
                margin-right: .5rem;
            } 

            .tw-z-\[2000\] { 
                z-index: 2000;
            } 

            .text-5dy { 
                font-size: .75rem; 
                line-height: 1rem;
            } 

            .tw-leading-q61 { 
                line-height: 1rem;
            } 

            .tw-mt-azx { 
                margin-top: .5rem;
            } 

            .tw-w-h8e { 
                width: 14rem;
            } 

            .tw-origin-top-6fs { 
                transform-origin: top left;
            } 

            .tw-rounded-3o3 { 
                border-radius: .375rem;
            } 

            .tw-bg-ol1 { 
                --tw-bg-opacity: 1; 
                background-color: #fff;
            } 

            .tw-bg-ol1 { 
                background-color: rgb(255 255 255/var(--tw-bg-opacity,1));
            } 

            .tw-p-j5r { 
                padding: .5rem;
            }

            .tw-ml-cqn { 
                margin-left: .5rem;
            } 

            .form-q75 { 
                transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
            } 

            .fa-lof { 
                -moz-osx-font-smoothing: grayscale; 
                -webkit-font-smoothing: antialiased; 
                display: var(--fa-display, inline-block); 
                font-style: normal; 
                font-variant: normal; 
                line-height: 1; 
                text-rendering: auto;
            } 

            .fa-lof { 
                font-family: 'Font Awesome 6 Pro';
            } 

            .fa-29l { 
                --fa: '\f078'; 
            } 

            .fa-lof { 
                font-weight: 900;
            } 

            .fa-lof:before,.fass:before,.far:before,.fasr:before,.fal:before,.fasl:before,.fat:before,.fast:before,.fad:before,.fadr:before,.fadl:before,.fadt:before,.fasds:before,.fasdr:before,.fasdl:before,.fasdt:before,.fab:before,.fa-solid:before,.fa-regular:before,.fa-light:before,.fa-thin:before,.fa-brands:before,.fa-classic:before,.fa-duotone:before,.fa-sharp:before,.fa-sharp-duotone:before,.fa:before { 
                content: var(--fa);
            } 

            .tw-mr-1r8 { 
                margin-right: .25rem;
            } 

            .tw-self-efy { 
                align-self: center;
            } 

            .gecko-ory { 
                --tw-text-opacity: 1; 
                color: #00a83e;
            } 

            .gecko-ory { 
                color: rgb(0 168 62/var(--tw-text-opacity,1));
            } 

            span[data-percent-change-target='percent'] { 
                transition-duration: .15s; 
                transition-property: color,background-color,border-color,text-decoration-color,fill,stroke; 
                transition-timing-function: cubic-bezier(.4,0,.2,1);
            } 

            span[data-percent-change-target='percent'] { 
                white-space: nowrap;
            } 

            .tw-max-h-qws { 
                max-height: 24rem;
            } 

            .tw-overflow-y-ts5 { 
                overflow-y: auto;
            } 

            .fa-wfe { 
                text-align: center; 
                width: 1.25em;
            } 

            .fa-lcy { 
                --fa: '\f0d8'; 
            } 

            .tw-px-rtd { 
                padding-left: .5rem; 
                padding-right: .5rem;
            } 

            .tw-py-qdd { 
                padding-bottom: .75rem; 
                padding-top: .75rem;
            } 

            .hovertw-bg-gray-xro:hover { 
                --tw-bg-opacity: 1; 
                background-color: #f1f5f9;
            } 

            .hovertw-bg-gray-xro:hover { 
                background-color: rgb(241 245 249/var(--tw-bg-opacity,1));
            } 


            /* These were inline style tags. Uses id+class to override almost everything */
            #style-HEXbc.style-HEXbc {  
            text-decoration: none !important;  
            }  
            #style-HWcAT.style-HWcAT {  
            text-decoration: none !important;  
            }  
            #style-4NZnl.style-4NZnl {  
            text-decoration: none !important;  
            }  
            #style-jHqbS.style-jHqbS {  
            text-decoration: none !important;  
            }  
            #style-H3Nyv.style-H3Nyv {  
            position: absolute;  
                inset: 0px auto auto 0px;  
                margin: 0px;  
                transform: translate3d(1210.4px, 8022.4px, 0px);  
            }  
            #style-4Pa4P.style-4Pa4P {  
                display: none;  
            }  
            /* These were inline style tags. Uses id+class to override almost everything */
            #style-6l9qf.style-6l9qf {  
            text-decoration: none !important;  
            }  
            #style-mFEYg.style-mFEYg {  
            text-decoration: none !important;  
            }  
            #style-SjoPm.style-SjoPm {  
            text-decoration: none !important;  
            }  
            #style-wxBvV.style-wxBvV {  
            text-decoration: none !important;  
            }  
            #style-oSJxy.style-oSJxy {  
            position: absolute;  
                inset: 0px auto auto 0px;  
                margin: 0px;  
                transform: translate3d(1210.4px, 8022.4px, 0px);  
            }  
            #style-To6Rk.style-To6Rk {  
                display: none;  
            }
        </style>
    </head>
    <body>
        <div class='tw-mt-wf8 mdtw-mt-76x tw-w-fxg' style='padding-right: 1rem !important;'>
            <h2 class='tw-mb-act tw-font-ng7 text-dby text-bfo text-54g tw-leading-do4'> Reddit Community Posts </h2>
            <div class='grid-6z2 grid-aoz tw-gap-qsq tw-mb-act'>
                " & Cards & "
            </div>
        </div>
    </body>
</html>"
MEASURE [Reddit Engagement Status] = 
VAR coinName = SELECTEDVALUE('User Portfolio Based Crypto Data'[Coin Name])
VAR upvotes = VALUE(SELECTEDVALUE('User Portfolio Based Crypto Data'[Avg Reddit Upvotes]))
VAR comments = VALUE(SELECTEDVALUE('User Portfolio Based Crypto Data'[Avg Reddit Comments]))
VAR mentions = VALUE(SELECTEDVALUE('User Portfolio Based Crypto Data'[Reddit Mentions]))
VAR label =
    SWITCH(TRUE(),
        upvotes > 1000 && comments > 200, "Highly Engaged",
        upvotes > 500 && comments > 50, "Positively Engaged",
        upvotes > 100 && comments > 20, "Moderately Engaged",
        "Experiencing Low Engagement"
    )
RETURN
    coinName & " is " & label & 
    " in the Reddit Community with " & FORMAT(upvotes, "#,##0") & " 📈 Upvotes, " & 
    FORMAT(comments, "#,##0") & " 💬 Comments, and " &
    FORMAT(mentions, "#,##0") & " 🔁 Reddit Mentions."

MEASURE [Reddit Sentiment Gauge] = 
VAR RedditScore = VALUE(SELECTEDVALUE('User Portfolio Based Crypto Data'[Reddit Sentiment]))

-- Directly scale the RedditScore (remove min/max logic)
VAR ScaledScore = 
    SWITCH(TRUE(),
        RedditScore >= 0, (RedditScore) * 100,    -- Scale directly from the RedditScore
        RedditScore < 0, 0                         -- Default to 0 if negative score
    )

-- Coin name for the label
VAR CoinName = SELECTEDVALUE('News Data'[coin])

-- Determine the label based on the ScaledScore
VAR Label =
    SWITCH(TRUE(),
        ScaledScore >= 80, "🔥 Reddit is buzzing with love for " & CoinName & "! Strongly positive vibe. 🚀",
        ScaledScore >= 60, "👍 Reddit community feels positively about " & CoinName & ".",
        ScaledScore >= 40, "💬 Reddit discussions around " & CoinName & " are fairly neutral.",
        ScaledScore >= 20, "👎 Reddit users are sharing some negative opinions on " & CoinName & ".",
        "🚫 Very negative sentiment detected from Reddit users about " & CoinName & "."
    )

-- Emoji representation for sentiment score based on ScaledScore
VAR Emoji =
    SWITCH(TRUE(),
        ScaledScore >= 80, "🔥",
        ScaledScore >= 60, "😄",
        ScaledScore >= 40, "😐",
        ScaledScore >= 20, "😕",
        "😞"
    )

-- Calculate angle for the gauge indicator
VAR Angle = PI() * ScaledScore / 100
VAR X = 100 - 80 * COS(Angle)
VAR Y = 80 - 80 * SIN(Angle)

-- Return the HTML output with the calculated sentiment values
RETURN
"<!DOCTYPE html>
<html>
    <head>
        <style>
            * { margin: 0; padding: 0; box-sizing: border-box; }
            body {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                background-color: #ffffff;
                display: flex;
                justify-content: center;
                align-items: center;
                min-height: 100vh;
                padding: 20px;
            }
            .sentiment-gauge-container {
                background: #ffffff;
                border-radius: 8px;
                padding: 10px;
                text-align: center;
                max-width: 450px;
                width: 100%;
            }
            .title-container {
                display: flex;
                justify-content: center;
                margin-bottom: 10px;
            }
            .gauge-title {
                font-size: 14px;
                font-weight: bold;
                color: #0f0f0f;
                background-color: #E6E6E6;
                padding: 6px 12px;
                border-radius: 12px;
                text-transform: uppercase;
                letter-spacing: 0.5px;
                text-align: center;
                display: inline-block;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            }
            .gauge-wrapper {
                position: relative;
                width: 200px;
                height: 100px;
                margin: 0 auto 15px;
            }
            .gauge-svg {
                width: 100%;
                height: 150%;
                overflow: visible;
            }
            .gauge-background {
                stroke: #e6e6e6;
                stroke-width: 12;
                fill: none;
                stroke-linecap: round;
            }
            .gauge-fill {
                stroke-width: 12;
                fill: none;
                stroke-linecap: round;
                transition: stroke-dashoffset 0.8s ease-out;
            }
            .gauge-indicator {
                fill: #666666;
                transition: transform 0.8s ease-out;
            }
            .gauge-center {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -30%);
                display: flex;
                flex-direction: column;
                align-items: center;
            }
            .emoji-icon {
                font-size: 30px;
                margin-bottom: -50px;
            }
            .sentiment-label {
                font-size: 16px;
                font-weight: 600;
                color: #333333;
                margin-top: 10px;
                text-align: center;
            }
            .sentiment-score {
                font-size: 14px;
                font-weight: bold;
                color: #666666;
                margin-top: 5px;
                text-align: center;
            }
            @media (max-width: 480px) {
                .gauge-wrapper { width: 160px; height: 80px; }
                .emoji-icon { font-size: 30px; margin-bottom: -50px; }
                .sentiment-label { font-size: 14px; }
            }
        </style>
    </head>
    <body>
        <div class='sentiment-gauge-container'>
            <div class='title-container'>
                <div class='gauge-title'>👥 Social Buzz from Reddit</div>
            </div>
            <div class='gauge-wrapper'>
                <svg class='gauge-svg' viewBox='0 0 200 100'>
                    <defs>
                        <linearGradient id='sentimentGradient' x1='0%' y1='0%' x2='100%' y2='0%'>
                            <stop offset='0%' stop-color='#F56565'/>
                            <stop offset='25%' stop-color='#ED8936'/>
                            <stop offset='50%' stop-color='#FFD700'/>
                            <stop offset='75%' stop-color='#6EE7B7'/>
                            <stop offset='100%' stop-color='#32CD32'/>
                        </linearGradient>
                    </defs>
                    <path class='gauge-background' d='M 20 80 A 80 80 0 0 1 180 80'/>
                    <path class='gauge-fill' d='M 20 80 A 80 80 0 0 1 180 80'
                        stroke='url(#sentimentGradient)'
                        stroke-dasharray='251.33'
                        stroke-dashoffset='" & FORMAT(251.33 - (251.33 * ScaledScore / 100), "0.0") & "'/>
                    <circle class='gauge-indicator'
                        cx='" & FORMAT(X, "0.0") & "'
                        cy='" & FORMAT(Y, "0.0") & "'
                        r='6'/>
                </svg>
                <div class='gauge-center'>
                    <div class='emoji-icon'>" & Emoji & "</div>
                </div>
            </div>
            <div class='sentiment-label'>" & Label & "</div>
            <div class='sentiment-score'>Score: " & FORMAT(RedditScore, "0.00") & "</div>
        </div>
    </body>
</html>"

MEASURE [RedditEngagementCard] = 
VAR EngagementRate = VALUE(SELECTEDVALUE('User Portfolio Based Crypto Data'[Engagement Rate]))
VAR ThresholdLevel =
    SWITCH(TRUE(),
        EngagementRate >= 6000, "🔥 High Community Hype",
        EngagementRate >= 3000, "⚡ Moderate Engagement",
        "💤 Low Community Interest"
    )

RETURN
"
<div style='text-align: center; font-family: Inter, sans-serif;'>
    <div style='font-size: 28px; font-weight: bold; color: #222;'>" & FORMAT(EngagementRate, "#,##0.00") & "</div>
    <div style='font-size: 18px; font-weight: 500; color: #555; margin-top: 4px;'>" & ThresholdLevel & "</div>
</div>
"

MEASURE [RedditTopPostStyledCardWithSentiment] = 
VAR Title     = SELECTEDVALUE('User Portfolio Based Crypto Data'[Top Post Title])
VAR PostURL       = SELECTEDVALUE('User Portfolio Based Crypto Data'[Top Post Link])
VAR Author    = SELECTEDVALUE('User Portfolio Based Crypto Data'[Top Post Author])
VAR Subreddit = SELECTEDVALUE('User Portfolio Based Crypto Data'[Top Post Subreddit])
VAR PostDate      = SELECTEDVALUE('User Portfolio Based Crypto Data'[Top Post Date])
VAR Upvotes   = SELECTEDVALUE('User Portfolio Based Crypto Data'[Top Post Upvotes])
VAR Comments  = SELECTEDVALUE('User Portfolio Based Crypto Data'[Top Post Comments])
VAR Sentiment = VALUE(SELECTEDVALUE('User Portfolio Based Crypto Data'[Top Post Sentiment]))

-- Icons
VAR UpvoteIcon = "⬆️"
VAR CommentIcon = "💬"

-- Sentiment color
VAR SentimentColor = 
    SWITCH(TRUE(),
        Sentiment >= 0.05, "#4CAF50",   -- green
        Sentiment <= -0.05, "#F44336",  -- red
        "#FFEB3B"                       -- yellow
    )

-- Sentiment label text
VAR SentimentLabel = 
    SWITCH(TRUE(),
        Sentiment >= 0.05, "Positive",   
        Sentiment <= -0.05, "Negative",  
        "Neutral"
    )

RETURN
"
<div style='
    font-family:Segoe UI, sans-serif;
    border:1px solid #ccc;
    border-radius:6px;
    padding:16px;
    max-width:600px;
    background:#fff;
    box-shadow:0 2px 5px rgba(0,0,0,0.05);
'>
    <!-- Header -->
    <div style='color:#555; font-size:13px; margin-bottom:6px;'>
        <b>r/" & Subreddit & "</b> • Posted by u/" & Author & " • " & PostDate & "
    </div>

    <!-- Title -->
    <div style='font-size:17px; font-weight:600; color:#222; margin-bottom:10px;'>
        <a href='" & PostURL & "' target='_blank' style='text-decoration:none; color:#000;'>
            " & Title & "
        </a>
    </div>

    <!-- Interaction row with sentiment -->
    <div style='display:flex; justify-content:space-between; font-size:14px; color:#555; margin-top:10px;'>
        <div>" & UpvoteIcon & " " & FORMAT(Upvotes, "#,##0") & "</div>
        <div>" & CommentIcon & " " & FORMAT(Comments, "#,##0") & "</div>
        <div style='font-weight:bold; padding:5px 10px; background-color:" & SentimentColor & "; color:white; border-radius:5px;'>
            Sentiment: " & SentimentLabel & " (" & FORMAT(Sentiment, "0.00") & ")
        </div>
    </div>

    <!-- Sentiment strip (colored bar) -->
    <div style='margin-top:10px; height:6px; background-color:" & SentimentColor & "; border-radius:3px;'></div>

    <!-- Footer -->
    <div style='font-size:11px; color:#888; margin-top:12px;'>
        Archived post. New comments cannot be posted and votes cannot be cast.
    </div>
</div>
"

MEASURE [RSI_Target] = 50 
MEASURE [Selected_Theme] = SELECTEDVALUE(Theme_Mode[Mode], "Light")
MEASURE [SelectedPageValue] = IF([IsUserInPortfolio], "Portfolio OverView", "Register New User")
MEASURE [Sentiment Emoji] = 
SWITCH(
    TRUE(),
    [News Sentiment Gauge] > 0.05, "😃",  // Positive
    [News Sentiment Gauge] < -0.05, "😡", // Negative
    "😐"  // Neutral
)

MEASURE [Sentiment Summary] = 
SWITCH(
    TRUE(),
    [News Sentiment Gauge] > 0.05, "The sentiment is overwhelmingly positive for this coin. 🚀",
    [News Sentiment Gauge] < -0.05, "The sentiment is negative, caution advised. ⚠️",
    "The sentiment is neutral. Nothing too drastic. 😐"
)

MEASURE [Status_Color] = 
IF(
    [Profit]=0,
    "#FF0000", // Red
    "#008000"  // Green
)

MEASURE [sub Message] = 
"← Subscribe to our Telegram Bot"
MEASURE [Top Gainer HTML Card] = 
VAR SummaryTable =
    ADDCOLUMNS(
        VALUES('User Portfolio Based Crypto Data'[Coin Name]),
        "Profit",
        SUMX(
            FILTER(
                'User Portfolio Based Crypto Data',
                'User Portfolio Based Crypto Data'[Coin Name] = EARLIER('User Portfolio Based Crypto Data'[Coin Name])
            ),
            ('User Portfolio Based Crypto Data'[Current Price] - 'User Portfolio Based Crypto Data'[Price on Puchase Date]) * 1
        ),
        "Investment",
        SUMX(
            FILTER(
                'User Portfolio Based Crypto Data',
                'User Portfolio Based Crypto Data'[Coin Name] = EARLIER('User Portfolio Based Crypto Data'[Coin Name])
            ),
            'User Portfolio Based Crypto Data'[Price on Puchase Date] * 1
        )
    )

VAR TopCoinRow = TOPN(1, SummaryTable, [Profit], DESC)

VAR TopCoin = MAXX(TopCoinRow, 'User Portfolio Based Crypto Data'[Coin Name])
VAR Profit = MAXX(TopCoinRow, [Profit])
VAR Investment = MAXX(TopCoinRow, [Investment])
VAR ProfitPct = DIVIDE(Profit, Investment, 0)

VAR CoinTable =
    FILTER(
        'User Portfolio Based Crypto Data',
        'User Portfolio Based Crypto Data'[Coin Name] = TopCoin
    )

VAR CurrentPrice =
    SUMX(CoinTable, 'User Portfolio Based Crypto Data'[Current Price] * 1)

VAR BuyPrice =
    SUMX(CoinTable, 'User Portfolio Based Crypto Data'[Price on Puchase Date] * 1)

VAR Change = CurrentPrice - BuyPrice

VAR CoinIcon =
    MAXX(CoinTable, 'User Portfolio Based Crypto Data'[Image URL])

VAR ArrowIcon = "https://i.postimg.cc/rsPbmpQ2/Screenshot-2025-07-11-195517-removebg-preview.png"  // Use your arrow image if needed

RETURN
IF(
    ISBLANK(TopCoin) || ISBLANK(Profit),
    BLANK(),
    "
    <div style='font-family: Segoe UI, sans-serif; padding-right: 10px;'>
        <div style='display: flex; flex-direction: row; justify-content: space-between; align-items: flex-start; gap: 8px;'>
            <!-- Left Column (Arrow + % below) -->
            <div style='display: flex; flex-direction: column; align-items: center;'>
                <img src='" & ArrowIcon & "' style='width: 48px; height: 48px;'/>
                <div style='font-size: 15px; font-weight: 700; color: black; margin-top: 4px;'>" & FORMAT(ProfitPct, "0.00%") & "</div>
            </div>

            <!-- Right Column (Icon + Name above, Value below) -->
            <div style='display: flex; flex-direction: column; align-items: flex-end;'>
                <div style='display: flex; align-items: center; gap: 6px;'>
                    <img src='" & CoinIcon & "' style='width: 48px; height: 48px; border-radius: 50%;'/>
                    <span style='font-size: 18px; font-weight: 800; color: black;'>" & TopCoin & "</span>
                </div>
                <div style='font-size: 15px; font-weight: 800; color: #058e3f; margin-top: 6px;'>+$" & FORMAT(ABS(Change), "0.00") & "</div>
            </div>
        </div>
    </div>"
)

MEASURE [Top Loser HTML Card] = 
VAR SummaryTable =
    ADDCOLUMNS(
        VALUES('User Portfolio Based Crypto Data'[Coin Name]),
        "Loss",
        SUMX(
            FILTER(
                'User Portfolio Based Crypto Data',
                'User Portfolio Based Crypto Data'[Coin Name] = EARLIER('User Portfolio Based Crypto Data'[Coin Name])
            ),
            ('User Portfolio Based Crypto Data'[Current Price] - 'User Portfolio Based Crypto Data'[Price on Puchase Date]) * 1
        ),
        "Investment",
        SUMX(
            FILTER(
                'User Portfolio Based Crypto Data',
                'User Portfolio Based Crypto Data'[Coin Name] = EARLIER('User Portfolio Based Crypto Data'[Coin Name])
            ),
            'User Portfolio Based Crypto Data'[Price on Puchase Date] * 1
        )
    )

VAR BottomCoinRow = TOPN(1, SummaryTable, [Loss], ASC)  -- Most negative = biggest loss

VAR BottomCoin = MAXX(BottomCoinRow, 'User Portfolio Based Crypto Data'[Coin Name])
VAR Loss = MAXX(BottomCoinRow, [Loss])
VAR Investment = MAXX(BottomCoinRow, [Investment])
VAR LossPct = DIVIDE(Loss, Investment, 0)

VAR CoinTable =
    FILTER(
        'User Portfolio Based Crypto Data',
        'User Portfolio Based Crypto Data'[Coin Name] = BottomCoin
    )

VAR CurrentPrice =
    SUMX(CoinTable, 'User Portfolio Based Crypto Data'[Current Price] * 1)

VAR BuyPrice =
    SUMX(CoinTable, 'User Portfolio Based Crypto Data'[Price on Puchase Date] * 1)

VAR Change = CurrentPrice - BuyPrice

VAR CoinIcon =
    MAXX(CoinTable, 'User Portfolio Based Crypto Data'[Image URL])

VAR ArrowIcon = "https://i.postimg.cc/Vvvtgs16/image-removebg-preview.png"  // Red down arrow

RETURN
IF(
    ISBLANK(BottomCoin) || ISBLANK(Loss),
    BLANK(),
    "
    <div style='font-family: Segoe UI, sans-serif; padding-right: 10px;'>
        <div style='display: flex; flex-direction: row; justify-content: space-between; align-items: flex-start; gap: 8px;'>
        
            <!-- Left Block (Arrow + Percentage) -->
            <div style='display: flex; flex-direction: column; align-items: center;'>
                <img src='" & ArrowIcon & "' style='width: 48px; height: 48px;'/>
                <div style='font-size: 15px; font-weight: 700; color: black; margin-top: 4px;'>" & FORMAT(LossPct, "0.00%") & "</div>
            </div>
            
            <!-- Right Block (Coin + Name + Value) -->
            <div style='display: flex; flex-direction: column; align-items: flex-end;'>
                <div style='display: flex; align-items: center; gap: 6px;'>
                    <img src='" & CoinIcon & "' style='width: 48px; height: 48px; border-radius: 50%;'/>
                    <span style='font-size: 18px; font-weight: 800; color: black;'>" & BottomCoin & "</span>
                </div>
                <div style='font-size: 15px; font-weight: 800; color: #d10000; margin-top: 6px;'>-$" & ABS(Change) & "</div>
            </div>
        </div>
    </div>"
)

MEASURE [Total Investment] = 
SUMX(
    'User Portfolio Based Crypto Data',
    'User Portfolio Based Crypto Data'[Price on Puchase Date]
)

MEASURE [Total Profit/Loss] = 
VAR Change =
    SUMX(
        'User Portfolio Based Crypto Data',
        'User Portfolio Based Crypto Data'[Current Price] - 'User Portfolio Based Crypto Data'[Price on Puchase Date]
    )
RETURN
    IF(
        ISBLANK(Change),
        "$0.00",
        Change
    )

MEASURE [Total Return %] = 
VAR RawReturn =
    DIVIDE(
        SUMX (
            'User Portfolio Based Crypto Data',
            'User Portfolio Based Crypto Data'[Current Price] - 'User Portfolio Based Crypto Data'[Price on Puchase Date]
        ),
        SUMX (
            'User Portfolio Based Crypto Data',
            'User Portfolio Based Crypto Data'[Price on Puchase Date]
        ),
        0
    )
RETURN
    FORMAT(RawReturn * 100, "0.0") & "%"

MEASURE [Trend] = 
VAR Down = "↓"
VAR Up = "↑"
VAR Trend_Value = [1H Price Change %]
VAR Rounded_Value = ROUND(Trend_Value, 2)
VAR Display_Value = FORMAT(ABS(Rounded_Value), "0.00") & "%"
RETURN
    SWITCH(
        TRUE(),
        ISBLANK(Trend_Value), BLANK(),
        Trend_Value < 0, Down & " " & Display_Value,
        Up & " " & Display_Value
    )

MEASURE [Trend_Color] = 
IF(
    [1H Price Change %] < 0,
    "#FF0000", // Red
    "#008000"  // Green
)

MEASURE [TTTT] = SELECTEDVALUE('TradingView Assets'[TradingView Logo])
MEASURE [User Profile Page] = 
"<!DOCTYPE html>
<html>
<head>
  <style>
    .user-card {font-family:Segoe UI, Arial, sans-serif;padding:20px;background:#fff;border-radius:10px;box-shadow:0 2px 8px rgba(0,0,0,0.1);max-width:600px;margin:auto;}
    .user-image img {width:100px;height:100px;border-radius:50%;border:2px solid #0078D7;}
    .user-info h2 {color:#0078D7;margin:0;}
    .user-info p {margin:4px 0;font-size:13px;}
  </style>
</head>
<body>
  <div class='user-card'>
    <div class='user-image'>
      <img src='" & SELECTEDVALUE('User Portfolio Based Crypto Data'[Image URL]) & "' alt='User Image'/>
    </div>
    <div class='user-info'>
      <h2>" & SELECTEDVALUE('User Portfolio Based Crypto Data'[Coin Name]) & "</h2>
      <p><strong>ID:</strong> " & SELECTEDVALUE('User MetaData'[User I'd]) & "</p>
      <p><strong>Email:</strong> " & SELECTEDVALUE('User MetaData'[Mail Address]) & "</p>
      <p><strong>Job Title:</strong> " & SELECTEDVALUE('User MetaData'[Job Title]) & "</p>
      <p><strong>Business Phone:</strong> " & SELECTEDVALUE('User MetaData'[Business Phones Number]) & "</p>
      <p><strong>Mobile:</strong> " & SELECTEDVALUE('User MetaData'[Phone Number]) & "</p>
      <p><strong>Other Mail:</strong> " & SELECTEDVALUE('User MetaData'[Other Mail]) & "</p>
      <p><strong>Address:</strong> " & SELECTEDVALUE('User MetaData'[Address]) & ", " & SELECTEDVALUE('User MetaData'[City]) & ", " & SELECTEDVALUE('User MetaData'[State]) & ", " & SELECTEDVALUE('User MetaData'[Country]) & ", " & SELECTEDVALUE('User MetaData'[Postal Code]) & "</p>
      <p><strong>Language:</strong> " & SELECTEDVALUE('User MetaData'[Preferred Language]) & "</p>
      <p><strong>Identity Provider:</strong> " & SELECTEDVALUE('User MetaData'[Identity Provider]) & "</p>
    </div>
  </div>
</body>
</html>"
MEASURE [UserProfile] = USERPRINCIPALNAME()
---- MODEL MEASURES END ----

EVALUATE 
TOPN( 500, 'Measures Table' )
